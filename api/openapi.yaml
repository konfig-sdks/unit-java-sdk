openapi: 3.0.2
info:
  description: An OpenAPI specifications for unit-sdk clients
  title: Unit OpenAPI specifications
  version: 0.0.2
  x-konfig-ignore:
    object-with-no-properties: true
  x-konfig-has-globally-required-security: true
servers:
- url: https://api.s.unit.sh
security:
- bearerAuth: []
tags:
- name: StopPayment
- name: Get Application
- name: Update Application
- name: Cancel Application
- name: Get List Applications
- name: Create Application
- name: Get List Application Forms
- name: Create ApplicationForm
- name: Upload a PNG Document for an Application
- name: Upload a JPEG Document for an Application
- name: Upload a PNG Document for an Application - Back Side
- name: Upload a JPEG Document for an Application - Back Side
- name: Get List of Documents
- name: Create a Document for an Application
- name: Verify a Document for an Application
- name: Download a Document
- name: Download a Document - Back Side
- name: Get Application Form
- name: Get List Accounts
- name: Create Account
- name: Get Account
- name: Update Account
- name: Get Account Limits
- name: Unfreeze Account
- name: Freeze an Account
- name: Close an Account
- name: Reopen an Account
- name: Enter Control Agreement for Account
- name: Activate Control Agreement for Account
- name: Deactivate Control Agreement for Account
- name: Get list account end-of-day balances history
- name: Get Customer
- name: Update Customer
- name: Get List Customers
- name: Archive Customer
- name: Get List Payments
- name: Create a Payment
- name: Get Payment
- name: Update Payment
- name: Cancel Payment
- name: Get Received Payments List
- name: Get Received Payment
- name: Update Received Payment
- name: Advance Received Payment
- name: Get List Counterparties
- name: Create Counterparty
- name: Delete Counterparty
- name: Get Counterparty
- name: Update Counterparty
- name: Get Counterparty Balance
- name: Get List Recurring Payments
- name: Create Recurring Payment
- name: Get Recurring Payment
- name: Disable Recurring Payment
- name: Enable Recurring Payment
- name: Get List of Cards
- name: Create a Card
- name: Get Card
- name: Update Card
- name: Get Card PIN Status
- name: Report Card as Stolen
- name: Report Card as Lost
- name: Close a Card
- name: Freeze a Card
- name: Unfreeze a Card
- name: Get Card Limits
- name: Get List Authorizations
- name: Get Authorization
- name: Get List Authorization Requests
- name: Get Authorization Request
- name: Approve Authorization Request
- name: Decline Authorization Request
- name: Get List Statements
- name: Get Statement HTML
- name: Get Statement PDF
- name: Get Bank verification PDF
- name: Get List Rewards
- name: Create Reward
- name: Get Reward
- name: Get List Events
- name: Get Event
- name: Fire Event
- name: Get Institution
- name: Create Fee
- name: Get List Check Deposits
- name: Create Check Deposit
- name: Get Check Deposit
- name: Update Check Deposit
- name: Confirm Check Deposit
- name: Get Check Deposit Front Image
- name: Get Check Deposit Back Image
- name: Get List Org API Tokens
- name: Create Org Api Token
- name: Revoke Org API Token
- name: Create Customer Token
- name: Create Customer Token Verification
- name: Get List Webhooks
- name: Create Webhook
- name: Get Webhook
- name: Update Webhook
- name: Enable Webhook
- name: Disable Webhook
- name: Get ATM Locations List
- name: Get Transaction
- name: Update Transaction
- name: Get List Transactions
- name: Get List Disputes
- name: Get Dispute
- name: Get List Repayments
- name: Create a Repayment
- name: Get Repayment
- name: Get List Check Payments
- name: Create Check Payment
- name: Get Check Payment
- name: Approve Check Payment
- name: Cancel Check Payment
- name: Return Check Payment
- name: Get a front image
- name: Get a back image
- name: Upload a PDF Document for an Application
- name: Upload a PDF Document for an Application - Back Side
paths:
  /applications/{applicationId}:
    get:
      description: 'Get an Application from API '
      operationId: GetApplication_byId
      parameters:
      - description: ID of the application to get
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetApplicationByIdResponse'
          description: Successful Response
      summary: Get Application by Id
      tags:
      - Get Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--applications-applicationId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Application via API '
      operationId: UpdateApplication_viaApi
      parameters:
      - description: ID of the application to update
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationViaApiRequest'
        description: Update Application Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1applications~1%7BapplicationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema'
          description: Successful Response
      summary: Update Application
      tags:
      - Update Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--applications-applicationId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/cancel:
    post:
      description: 'Cancel a Application via API '
      operationId: CancelApplication_byId
      parameters:
      - description: ID of the application to get
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CancelApplicationByIdRequest'
        description: Cancel Application Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CancelApplicationByIdResponse'
          description: Successful Response
      summary: Cancel Application by Id
      tags:
      - Cancel Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--applications-applicationId-cancel
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /applications:
    get:
      description: 'Get List Applications from API '
      operationId: GetListApplications_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListApplications_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetListApplicationsFromApi200Response'
          description: Successful Response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetListApplicationsFromApiResponse'
          description: Unexpected error
      summary: Get List Application
      tags:
      - Get List Applications
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--applications
      x-accepts: application/json
    post:
      description: 'Create an Application via API '
      operationId: CreateApplication_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateApplicationViaApiRequest'
        description: Create Application Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateApplicationViaApiResponse'
          description: Successful Response
      summary: Create Application
      tags:
      - Create Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--applications
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /application-forms:
    get:
      description: 'Get List Application Forms from API '
      operationId: GetListApplicationForms_viaApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListApplicationForms_viaApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListApplicationFormsViaApiResponse'
          description: Successful Response
      summary: Get List Application Forms
      tags:
      - Get List Application Forms
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--application-forms
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create an Application Form via API '
      operationId: CreateApplicationForm_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateApplicationFormViaApiRequest'
        description: Create Application Form Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateApplicationFormViaApiResponse'
          description: Successful Response
      summary: Create Application Form
      tags:
      - Create ApplicationForm
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--application-forms
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /applications/{applicationId}/documents/{documentId}:
    put:
      description: 'Upload a PNG file via API '
      operationId: UploadAPngDocumentForAnApplication_byId
      parameters:
      - description: ID of the application to upload a file to
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to upload a file for
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          image/png:
            schema:
              $ref: '#/components/schemas/UploadAPngDocumentForAnApplicationByIdRequest'
        description: Upload PNG File
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1applications~1%7BapplicationId%7D~1documents/post/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema'
          description: Successful Response
      summary: Upload a PNG document
      tags:
      - Upload a PNG Document for an Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId
      x-content-type: image/png
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/?:
    put:
      description: 'Upload a JPEG file via API '
      operationId: UploadAJpegDocumentForAnApplication_viaApi
      parameters:
      - description: ID of the application to upload a file to
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to upload a file for
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          image/jpeg:
            schema:
              $ref: '#/components/schemas/UploadAJpegDocumentForAnApplicationViaApiRequest'
        description: Upload JPEG File
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1applications~1%7BapplicationId%7D~1documents/post/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema'
          description: Successful Response
      summary: Upload a JPEG document
      tags:
      - Upload a JPEG Document for an Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId-?
      x-content-type: image/jpeg
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/back:
    put:
      description: Upload a PNG file via API - Back Side
      operationId: UploadAPngDocumentForAnApplicationBackSide_put
      parameters:
      - description: ID of the application to upload a file to
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to upload a file for
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          image/png:
            schema:
              $ref: '#/components/schemas/UploadAPngDocumentForAnApplicationBackSidePutRequest'
        description: Upload PNG File - Back Side
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1applications~1%7BapplicationId%7D~1documents/post/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema'
          description: Successful Response
      summary: Upload a PNG document - Back Side
      tags:
      - Upload a PNG Document for an Application - Back Side
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId-back
      x-content-type: image/png
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/back/?:
    put:
      description: Upload a JPEG file via API - Back Side
      operationId: UploadAJpegDocumentForAnApplicationBackSide_put
      parameters:
      - description: ID of the application to upload a file to
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to upload a file for
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          image/jpeg:
            schema:
              $ref: '#/components/schemas/UploadAJpegDocumentForAnApplicationBackSidePutRequest'
        description: Upload JPEG File - Back Side
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1applications~1%7BapplicationId%7D~1documents/post/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema'
          description: Successful Response
      summary: Upload a JPEG document - Back Side
      tags:
      - Upload a JPEG Document for an Application - Back Side
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId-back-?
      x-content-type: image/jpeg
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents:
    get:
      description: 'Get List of Documents via API '
      operationId: GetListOfDocuments_viaApi
      parameters:
      - description: ID of the application to get documents for
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListOfDocumentsViaApiResponse'
          description: Successful Response
      summary: Get List of Documents
      tags:
      - Get List of Documents
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--applications-applicationId-documents
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a document via API '
      operationId: CreateADocumentForAnApplication_viaApi
      parameters:
      - description: ID of the application to create a file for
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreateADocumentForAnApplicationViaApiResponse'
          description: Successful Response
      summary: Create a document
      tags:
      - Create a Document for an Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--applications-applicationId-documents
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/verify:
    put:
      description: 'Verify a document via API '
      operationId: VerifyADocumentForAnApplication_put
      parameters:
      - description: ID of the application to verify a file for
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to verify
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyADocumentForAnApplicationPutRequest'
        description: Verify Document
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1applications~1%7BapplicationId%7D~1documents/post/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema'
          description: Successful Response
      summary: Verify a document
      tags:
      - Verify a Document for an Application
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId-verify
      x-content-type: application/json
      x-accepts: application/vnd.api+json; charset=utf-8
  /applications/{applicationId}/documents/{documentId}/download:
    get:
      description: 'Download a Document via API '
      operationId: DownloadADocument_viaApi
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to download
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/DownloadADocumentViaApiResponse'
          description: Successful Response
      summary: Download a Document
      tags:
      - Download a Document
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--applications-applicationId-documents-documentId-download
      x-accepts: application/octet-stream
  /applications/{applicationId}/documents/{documentId}/download/back:
    get:
      description: Download a Document - Back Side via API
      operationId: DownloadADocumentBackSide_viaApi
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document to download
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/DownloadADocumentBackSideViaApiResponse'
          description: Successful Response
      summary: Download a Document - Back Side
      tags:
      - Download a Document - Back Side
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--applications-applicationId-documents-documentId-download-back
      x-accepts: application/octet-stream
  /application-forms/{applicationFormId}:
    get:
      description: 'Get an Application Form from API '
      operationId: GetApplicationForm_byId
      parameters:
      - description: ID of the application form to get
        explode: false
        in: path
        name: applicationFormId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetApplicationFormByIdResponse'
          description: Successful Response
      summary: Get ApplicationForm by Id
      tags:
      - Get Application Form
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--application-forms-applicationFormId
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts:
    get:
      description: 'Get List Accounts from API '
      operationId: GetListAccounts_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListAccounts_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListAccountsFromApiResponse'
          description: Successful Response
        "401":
          description: UnitError
      summary: Get List Accounts
      tags:
      - Get List Accounts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create Account via API '
      operationId: CreateAccount_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateAccountViaApiRequest'
        description: Create Account Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Create Account
      tags:
      - Create Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}:
    get:
      description: 'Get an Account from API '
      operationId: GetAccount_byId
      parameters:
      - description: ID of the account to get
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetAccountByIdResponse'
          description: Successful Response
      summary: Get Account by Id
      tags:
      - Get Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Account via API '
      operationId: UpdateAccount_viaApi
      parameters:
      - description: ID of the account to update
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateAccountViaApiRequest'
        description: Update Account Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateAccountViaApiResponse'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Update Account
      tags:
      - Update Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--accounts-accountId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /accounts/{accountId}/limits:
    get:
      description: 'Get Account Limits from API '
      operationId: GetAccountLimits_byId
      parameters:
      - description: ID of the account to get
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetAccountLimitsByIdResponse'
          description: Successful Response
      summary: Get Account Limits by Id
      tags:
      - Get Account Limits
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-limits
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/unfreeze:
    post:
      description: 'Unfreeze an Account via API '
      operationId: UnfreezeAccount_byId
      parameters:
      - description: ID of the account to get
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Unfreeze Account by Id
      tags:
      - Unfreeze Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-unfreeze
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/freeze:
    post:
      description: 'Freeze Account via API '
      operationId: FreezeAnAccount_byId
      parameters:
      - description: ID of the account to freeze
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FreezeAnAccountByIdRequest'
        description: Freeze Account Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Freeze Account by Id
      tags:
      - Freeze an Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-freeze
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/close:
    post:
      description: 'Close an Account via API '
      operationId: CloseAnAccount_byId
      parameters:
      - description: ID of the account to close
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CloseAnAccountByIdRequest'
        description: Close Account Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Close an Account by Id
      tags:
      - Close an Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-close
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/reopen:
    post:
      description: 'Reopen an Account via API '
      operationId: ReopenAnAccount_byId
      parameters:
      - description: ID of the account to close
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Reopen an Account by Id
      tags:
      - Reopen an Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-reopen
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/enter-daca:
    post:
      description: 'Enter Control Agreement for Account via API '
      operationId: EnterControlAgreementForAccount_byId
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Enter Account Control Agreement by Id
      tags:
      - Enter Control Agreement for Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-enter-daca
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/activate-daca:
    post:
      description: 'Activate Control Agreement for Account via API '
      operationId: ActivateControlAgreementForAccount_byId
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Activate Account Control Agreement by Id
      tags:
      - Activate Control Agreement for Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-activate-daca
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/deactivate-daca:
    post:
      description: Deactivate Control Agreement for Account via API
      operationId: DeactivateControlAgreementForAccount_byId
      parameters:
      - description: ID of the account
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
        "404":
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Deactivate Account Control Agreement by Id
      tags:
      - Deactivate Control Agreement for Account
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--accounts-accountId-deactivate-daca
      x-accepts: application/vnd.api+json; charset=utf-8
  /account-end-of-day:
    get:
      description: 'Get AccountEndOfDay List from API '
      operationId: GetListAccountEndofdayBalancesHistory_fromApi
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListAccountEndofdayBalancesHistoryFromApiResponse'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Get AccountEndOfDay List
      tags:
      - Get list account end-of-day balances history
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--account-end-of-day
      x-accepts: application/vnd.api+json; charset=utf-8
  /customers/{customerId}:
    get:
      description: 'Get a Customer from API '
      operationId: GetCustomer_byId
      parameters:
      - description: ID of the customer to get
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1customers~1%7BcustomerId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Get Customer by Id
      tags:
      - Get Customer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--customers-customerId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Customer via API '
      operationId: UpdateCustomer_viaApi
      parameters:
      - description: ID of the customer to update
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerViaApiRequest'
        description: Update Customer Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerViaApiResponse'
          description: Successful Response
      summary: Update Customer
      tags:
      - Update Customer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--customers-customerId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /customers:
    get:
      description: 'Get Customers List from API '
      operationId: GetListCustomers_apiList
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListCustomers_apiList_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListCustomersApiListResponse'
          description: Successful Response
      summary: Get Customers List
      tags:
      - Get List Customers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--customers
      x-accepts: application/vnd.api+json; charset=utf-8
  /customers/{customerId}/archive:
    post:
      description: 'Archive a Customer via API '
      operationId: ArchiveCustomer_byId
      parameters:
      - description: ID of the customer to archive
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ArchiveCustomerByIdRequest'
        description: Archive Customer Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1customers~1%7BcustomerId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Archive Customer by Id
      tags:
      - Archive Customer
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--customers-customerId-archive
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /payments:
    get:
      description: 'Get List Payments from API '
      operationId: GetListPayments_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListPayments_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListPaymentsFromApiResponse'
          description: Successful Response
      summary: Get List Payments
      tags:
      - Get List Payments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payments
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Payment via API '
      operationId: CreateAPayment_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateAPaymentViaApiRequest'
        description: Create Payment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1payments~1%7BpaymentId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Create a Payment
      tags:
      - Create a Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--payments
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /payments/{paymentId}:
    get:
      description: 'Get a Payment from API '
      operationId: GetPayment_byId
      parameters:
      - description: ID of the payment to get
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetPaymentByIdResponse'
          description: Successful Response
      summary: Get Payment by Id
      tags:
      - Get Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--payments-paymentId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update an Payment via API '
      operationId: UpdatePayment_viaApi
      parameters:
      - description: ID of the payment to update
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentViaApiRequest'
        description: Update Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdatePaymentViaApiResponse'
          description: Successful Response
      summary: Update Payment
      tags:
      - Update Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--payments-paymentId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /payments/{paymentId}/cancel:
    post:
      description: 'Cancel a Payment via API '
      operationId: CancelPayment_byId
      parameters:
      - description: ID of the payment to cancel
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1payments~1%7BpaymentId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Cancel a Payment by Id
      tags:
      - Cancel Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--payments-paymentId-cancel
      x-accepts: application/vnd.api+json; charset=utf-8
  /received-payments:
    get:
      description: 'Get Received Payments from API '
      operationId: GetReceivedPaymentsList_fromApi
      parameters:
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetReceivedPaymentsListFromApiResponse'
          description: Successful Response
      summary: Get Received Payments List
      tags:
      - Get Received Payments List
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--received-payments
      x-accepts: application/vnd.api+json; charset=utf-8
  /received-payments/{paymentId}:
    get:
      description: 'Get a Received Payment from API '
      operationId: GetReceivedPayment_byId
      parameters:
      - description: ID of the payment to get
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetReceivedPaymentByIdResponse'
          description: Successful Response
      summary: Get Received Payment by Id
      tags:
      - Get Received Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--received-payments-paymentId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Received Payment via API '
      operationId: UpdateReceivedPayment_viaApi
      parameters:
      - description: ID of the payment to update
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateReceivedPaymentViaApiRequest'
        description: Update Received Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateReceivedPaymentViaApiResponse'
          description: Successful Response
      summary: Update Received Payment
      tags:
      - Update Received Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--received-payments-paymentId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /received-payments/{paymentId}/advance:
    post:
      description: 'Advance a Received Payment via API '
      operationId: AdvanceReceivedPayment_byId
      parameters:
      - description: ID of the payment to advance
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1received-payments~1%7BpaymentId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Advance Received Payment by Id
      tags:
      - Advance Received Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--received-payments-paymentId-advance
      x-accepts: application/vnd.api+json; charset=utf-8
  /counterparties:
    get:
      description: 'Get Counterparties List from API '
      operationId: GetListCounterparties_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListCounterparties_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListCounterpartiesFromApiResponse'
          description: Successful Response
      summary: Get Counterparties List
      tags:
      - Get List Counterparties
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--counterparties
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a counterparty via API '
      operationId: CreateCounterparty_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCounterpartyViaApiRequest'
        description: Create Counterparty Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateCounterpartyViaApiResponse'
          description: Successful Response
      summary: Create Counterparty
      tags:
      - Create Counterparty
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--counterparties
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /counterparties/{counterpartyId}:
    delete:
      description: 'Delete Counterparty via API '
      operationId: DeleteCounterparty_byId
      parameters:
      - description: ID of the counterparty to delete
        explode: false
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful Response
      summary: Delete Counterparty by Id
      tags:
      - Delete Counterparty
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--counterparties-counterpartyId
      x-accepts: application/json
    get:
      description: 'Get a Counterparty from API '
      operationId: GetCounterparty_byId
      parameters:
      - description: ID of the counterparty to get
        explode: false
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetCounterpartyByIdResponse'
          description: Successful Response
      summary: Get Counterparty by Id
      tags:
      - Get Counterparty
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--counterparties-counterpartyId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Counterparty via API '
      operationId: UpdateCounterparty_viaApi
      parameters:
      - description: ID of the counterparty to update
        explode: false
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCounterpartyViaApiRequest'
        description: Update Counterparty Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateCounterpartyViaApiResponse'
          description: Successful Response
      summary: Update Counterparty
      tags:
      - Update Counterparty
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--counterparties-counterpartyId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /counterparties/{counterpartyId}/balance:
    get:
      description: 'Get Recurring Payment from API '
      operationId: GetCounterpartyBalance_recurringPaymentFromApi
      parameters:
      - description: ID of the counterparty to get
        explode: false
        in: path
        name: counterpartyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetCounterpartyBalanceRecurringPaymentFromApiResponse'
          description: Successful Response
      summary: Get Counterparty Balance
      tags:
      - Get Counterparty Balance
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--counterparties-counterpartyId-balance
      x-accepts: application/vnd.api+json; charset=utf-8
  /recurring-payments:
    get:
      description: 'Get Recurring Payments List from API '
      operationId: GetListRecurringPayments_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListRecurringPayments_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListRecurringPaymentsFromApiResponse'
          description: Successful Response
      summary: Get Recurring Payments List
      tags:
      - Get List Recurring Payments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--recurring-payments
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Recurring Payment via API '
      operationId: CreateRecurringPayment_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRecurringPaymentViaApiRequest'
        description: Create Recurring Payment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateRecurringPaymentViaApiResponse'
          description: Successful Response
      summary: Create Recurring Payment
      tags:
      - Create Recurring Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--recurring-payments
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /recurring-payments/{paymentId}:
    get:
      description: 'Get Recurring Payment from API '
      operationId: GetRecurringPayment_byId
      parameters:
      - description: ID of the payment to get
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1recurring-payments/post/responses/201/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Get Recurring Payment
      tags:
      - Get Recurring Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--recurring-payments-paymentId
      x-accepts: application/vnd.api+json; charset=utf-8
  /recurring-payments/{paymentId}/disable:
    post:
      description: 'Disable Recurring Payment via API '
      operationId: DisableRecurringPayment_viaApi
      parameters:
      - description: ID of the payment to disable
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1recurring-payments/post/responses/201/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Disable Recurring Payment
      tags:
      - Disable Recurring Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--recurring-payments-paymentId-disable
      x-accepts: application/vnd.api+json; charset=utf-8
  /recurring-payments/{paymentId}/enable:
    post:
      description: 'Enable Recurring Payment via API '
      operationId: EnableRecurringPayment_viaApi
      parameters:
      - description: ID of the payment to enable
        explode: false
        in: path
        name: paymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1recurring-payments/post/responses/201/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Enable Recurring Payment
      tags:
      - Enable Recurring Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--recurring-payments-paymentId-enable
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards:
    get:
      description: 'Get List of Cards from API '
      operationId: GetListOfCards_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/GetListOfCards_fromApi_page_parameter'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListOfCards_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListOfCardsFromApiResponse'
          description: Successful Response
      summary: Get List of Cards
      tags:
      - Get List of Cards
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Card via API '
      operationId: CreateACard_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateACardViaApiRequest'
        description: Create Card Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreateACardViaApiResponse'
          description: Successful Response
      summary: Create a Card
      tags:
      - Create a Card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}:
    get:
      description: 'Get a Card from API '
      operationId: GetCard_byId
      parameters:
      - description: ID of the card to get
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: included
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetCardByIdResponse'
          description: Successful Response
      summary: Get Card by Id
      tags:
      - Get Card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-cardId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Card via API '
      operationId: UpdateCard_viaApi
      parameters:
      - description: ID of the card to update
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCardViaApiRequest'
        description: Update Card Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateCardViaApiResponse'
          description: Successful Response
      summary: Update Card
      tags:
      - Update Card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--cards-cardId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /cards/{cardId}/secure-data/pin/status:
    get:
      description: 'Get Card PIN Status via API '
      operationId: GetCardPinStatus_pinStatus
      parameters:
      - description: ID of the card to get PIN status
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetCardPinStatusPinStatusResponse'
          description: Successful Response
      summary: Get Card PIN Status
      tags:
      - Get Card PIN Status
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-cardId-secure-data-pin-status
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/report-stolen:
    post:
      description: 'Report card as stolen via API '
      operationId: ReportCardAsStolen_viaApi
      parameters:
      - description: ID of the card
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ReportCardAsStolenViaApiResponse'
          description: Successful Response
      summary: Report card as stolen
      tags:
      - Report Card as Stolen
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-cardId-report-stolen
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/report-lost:
    post:
      description: 'Report lost as stolen via API '
      operationId: ReportCardAsLost_viaApi
      parameters:
      - description: ID of the card
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ReportCardAsLostViaApiResponse'
          description: Successful Response
      summary: Report lost as stolen
      tags:
      - Report Card as Lost
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-cardId-report-lost
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/close:
    post:
      description: 'Close a Card via API '
      operationId: CloseACard_viaApi
      parameters:
      - description: ID of the card to close
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CloseACardViaApiResponse'
          description: Successful Response
      summary: Close a Card
      tags:
      - Close a Card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-cardId-close
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/freeze:
    post:
      description: 'Freeze a Card via API '
      operationId: FreezeACard_viaApi
      parameters:
      - description: ID of the card to freeze
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/FreezeACardViaApiResponse'
          description: Successful Response
      summary: Freeze a Card
      tags:
      - Freeze a Card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-cardId-freeze
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/unfreeze:
    post:
      description: 'Unfreeze a Card via API '
      operationId: UnfreezeACard_byId
      parameters:
      - description: ID of the card to unfreeze
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UnfreezeACardByIdResponse'
          description: Successful Response
      summary: Unfreeze a Card
      tags:
      - Unfreeze a Card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-cardId-unfreeze
      x-accepts: application/vnd.api+json; charset=utf-8
  /cards/{cardId}/limits:
    get:
      description: 'Get a Card Limits from API '
      operationId: GetCardLimits_byId
      parameters:
      - description: ID of the card to get
        explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetCardLimitsByIdResponse'
          description: Successful Response
      summary: Get Card Limit by Id
      tags:
      - Get Card Limits
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-cardId-limits
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorizations:
    get:
      description: 'Get List Authorizations from API '
      operationId: GetListAuthorizations_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListAuthorizations_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListAuthorizationsFromApiResponse'
          description: Successful Response
      summary: Get List authorizations
      tags:
      - Get List Authorizations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--authorizations
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorizations/{authorizationId}:
    get:
      description: 'Get a Authorization from API '
      operationId: GetAuthorization_byId
      parameters:
      - description: ID of the authorization to get
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: includeNoneAuthorized
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetAuthorizationByIdResponse'
          description: Successful Response
      summary: Get Authorization by Id
      tags:
      - Get Authorization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--authorizations-authorizationId
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorization-requests:
    get:
      description: 'Get List Authorization Requests from API '
      operationId: GetListAuthorizationRequests_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListAuthorizationRequests_fromApi_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListAuthorizationRequestsFromApiResponse'
          description: Successful Response
      summary: Get List Authorization Requests
      tags:
      - Get List Authorization Requests
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--authorization-requests
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorization-requests/{authorizationId}:
    get:
      description: 'Get a Authorization Request from API '
      operationId: GetAuthorizationRequest_byId
      parameters:
      - description: ID of the authorization request to get
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetAuthorizationRequestByIdResponse'
          description: Successful Response
      summary: Get Authorization Request by Id
      tags:
      - Get Authorization Request
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--authorization-requests-authorizationId
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorization-requests/{authorizationId}/approve:
    post:
      description: 'Approve a Authorization Request via API '
      operationId: ApproveAuthorizationRequest_byId
      parameters:
      - description: ID of the authorization request to approve
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ApproveAuthorizationRequestByIdRequest'
        description: Approve Authorization Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ApproveAuthorizationRequestByIdResponse'
          description: Successful Response
      summary: Approve Authorization Request by Id
      tags:
      - Approve Authorization Request
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--authorization-requests-authorizationId-approve
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /authorization-requests/{authorizationId}/decline:
    post:
      description: 'Decline Authorization Request via API '
      operationId: DeclineAuthorizationRequest_viaApi
      parameters:
      - description: ID of the authorization request to decline
        explode: false
        in: path
        name: authorizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DeclineAuthorizationRequestViaApiRequest'
        description: Decline Authorization Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DeclineAuthorizationRequestViaApiResponse'
          description: Successful Response
      summary: Decline Authorization Request
      tags:
      - Decline Authorization Request
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--authorization-requests-authorizationId-decline
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /statements:
    get:
      description: 'Get List Statements from API '
      operationId: GetListStatements_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListStatements_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListStatementsFromApiResponse'
          description: Successful Response
      summary: Get List Statements
      tags:
      - Get List Statements
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--statements
      x-accepts: application/vnd.api+json; charset=utf-8
  /statements/{statementId}/html:
    get:
      description: 'Get a HTML Statement from API '
      operationId: GetStatementHtml_byId
      parameters:
      - description: ID of the statement to get
        explode: false
        in: path
        name: statementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/GetStatementHtmlByIdResponse'
          description: Successful Response
      summary: Get HTML Statement by Id
      tags:
      - Get Statement HTML
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--statements-statementId-html
      x-accepts: text/html
  /statements/{statementId}/pdf:
    get:
      description: 'Get a PDF Statement from API '
      operationId: GetStatementPdf_byId
      parameters:
      - description: ID of the statement to get
        explode: false
        in: path
        name: statementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/GetStatementPdfByIdResponse'
          description: Successful Response
      summary: Get PDF Statement by Id
      tags:
      - Get Statement PDF
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--statements-statementId-pdf
      x-accepts: application/pdf
  /statements/{accountId}/bank/pdf:
    get:
      description: 'Get Get Bank verification PDF from API '
      operationId: GetBankVerificationPdf_fromApi
      parameters:
      - description: ID of the account to get
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/GetBankVerificationPdfFromApiResponse'
          description: Successful Response
      summary: Get Bank verification PDF
      tags:
      - Get Bank verification PDF
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--statements-accountId-bank-pdf
      x-accepts: application/pdf
  /rewards:
    get:
      description: 'Get Rewards List from API '
      operationId: GetListRewards_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListRewards_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListRewardsFromApiResponse'
          description: Successful Response
      summary: Get Rewards List
      tags:
      - Get List Rewards
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--rewards
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Reward via API '
      operationId: CreateReward_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateRewardViaApiRequest'
        description: Create Reward Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateRewardViaApiResponse'
          description: Successful Response
      summary: Create Reward
      tags:
      - Create Reward
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--rewards
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /rewards/{rewardId}:
    get:
      description: 'Get a Reward from API '
      operationId: GetReward_byId
      parameters:
      - description: ID of the reward to get
        explode: false
        in: path
        name: rewardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetRewardByIdResponse'
          description: Successful Response
      summary: Get Reward by Id
      tags:
      - Get Reward
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--rewards-rewardId
      x-accepts: application/vnd.api+json; charset=utf-8
  /events:
    get:
      description: 'Get Events List from API '
      operationId: GetListEvents_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListEvents_fromApi_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListEventsFromApiResponse'
          description: Successful Response
      summary: Get Events List
      tags:
      - Get List Events
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--events
      x-accepts: application/vnd.api+json; charset=utf-8
  /events/{eventId}:
    get:
      description: 'Get an Event from API '
      operationId: GetEvent_byId
      parameters:
      - description: ID of the event to get
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetEventByIdResponse'
          description: Successful Response
      summary: Get Event by Id
      tags:
      - Get Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--events-eventId
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Fire an Event via API '
      operationId: FireEvent_byId
      parameters:
      - description: ID of the event to fire
        explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/FireEventByIdResponse'
          description: Successful Response
      summary: Fire Event by Id
      tags:
      - Fire Event
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--events-eventId
      x-accepts: application/vnd.api+json; charset=utf-8
  /institutions/{routingNumber}:
    get:
      description: 'Get an Institution from API '
      operationId: GetInstitution_byRoutingNumber
      parameters:
      - description: routingNumber of the institution to get
        explode: false
        in: path
        name: routingNumber
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetInstitutionByRoutingNumberResponse'
          description: Successful Response
      summary: Get Institution by Routing Number
      tags:
      - Get Institution
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--institutions-routingNumber
      x-accepts: application/vnd.api+json; charset=utf-8
  /fees:
    post:
      description: 'Create a Fee via API '
      operationId: CreateFee_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateFeeViaApiRequest'
        description: Create Fee Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateFeeViaApiResponse'
          description: Successful Response
      summary: Create Fee
      tags:
      - Create Fee
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--fees
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /check-deposits:
    get:
      description: 'Get List Check Deposits from API '
      operationId: GetListCheckDeposits_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListCheckDeposits_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListCheckDepositsFromApiResponse'
          description: Successful Response
      summary: Get List Check Deposits
      tags:
      - Get List Check Deposits
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--check-deposits
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Check Deposit via API '
      operationId: CreateCheckDeposit_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCheckDepositViaApiRequest'
        description: Create Check Deposit Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateCheckDepositViaApiResponse'
          description: Successful Response
      summary: Create Check Deposit
      tags:
      - Create Check Deposit
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--check-deposits
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /check-deposits/{checkDepositId}:
    get:
      description: 'Get a Check Deposit from API '
      operationId: GetCheckDeposit_byId
      parameters:
      - description: ID of the check deposit to get
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetCheckDepositByIdResponse'
          description: Successful Response
      summary: Get Check Deposit by Id
      tags:
      - Get Check Deposit
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--check-deposits-checkDepositId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Check Deposit via API '
      operationId: UpdateCheckDeposit_byId
      parameters:
      - description: ID of the check deposit to update
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateCheckDepositByIdRequest'
        description: Update Check Deposit Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateCheckDepositByIdResponse'
          description: Successful Response
      summary: Update Check Deposit
      tags:
      - Update Check Deposit
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--check-deposits-checkDepositId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /check-deposits/{checkDepositId}/confirm:
    post:
      description: 'Confirm a Check Deposit from API '
      operationId: ConfirmCheckDeposit_byId
      parameters:
      - description: ID of the check deposit to confirm
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ConfirmCheckDepositByIdResponse'
          description: Successful Response
      summary: Confirm by Id
      tags:
      - Confirm Check Deposit
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--check-deposits-checkDepositId-confirm
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-deposits/{checkDepositId}/front:
    get:
      description: 'Get Front Check Deposit Image from API '
      operationId: GetCheckDepositFrontImage_byId
      parameters:
      - description: ID of the check deposit to get
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetCheckDepositFrontImageByIdResponse'
          description: Successful Response
      summary: Get Front Check Deposit Image by Id
      tags:
      - Get Check Deposit Front Image
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--check-deposits-checkDepositId-front
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-deposits/{checkDepositId}/back:
    get:
      description: 'Get Back Check Deposit Image from API '
      operationId: GetCheckDepositBackImage_byId
      parameters:
      - description: ID of the check deposit to get
        explode: false
        in: path
        name: checkDepositId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetCheckDepositBackImageByIdResponse'
          description: Successful Response
      summary: Get Back Check Deposit Image by Id
      tags:
      - Get Check Deposit Back Image
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--check-deposits-checkDepositId-back
      x-accepts: application/vnd.api+json; charset=utf-8
  /users/{userId}/api-tokens:
    get:
      description: 'Get List Org API Tokens from API '
      operationId: GetListOrgApiTokens_fromApi
      parameters:
      - description: ID of the user to revoke token
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListOrgApiTokensFromApiResponse'
          description: Successful Response
      summary: Get List Org API Tokens
      tags:
      - Get List Org API Tokens
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--users-userId-api-tokens
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create an Org API Token via API '
      operationId: CreateOrgApiToken_viaApi
      parameters:
      - description: ID of the user to create token for
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateOrgApiTokenViaApiRequest'
        description: Create Org API Token Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateOrgApiTokenViaApiResponse'
          description: Successful Response
      summary: Create Org API Token
      tags:
      - Create Org Api Token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--users-userId-api-tokens
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /users/{userId}/api-tokens/{tokenId}:
    delete:
      description: 'Get a Reward from API '
      operationId: RevokeOrgApiToken_rewardById
      parameters:
      - description: ID of the user to revoke token
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the token to revoke
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/RevokeOrgApiTokenRewardByIdResponse'
          description: Successful Response
      summary: Get Reward by Id
      tags:
      - Revoke Org API Token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--users-userId-api-tokens-tokenId
      x-accepts: application/vnd.api+json; charset=utf-8
  /customers/{customerId}/token:
    post:
      description: 'Create a Customer Token via API '
      operationId: CreateCustomerToken_viaApi
      parameters:
      - description: ID of the customer to create token for
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCustomerTokenViaApiRequest'
        description: Create Customer Token Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreateCustomerTokenViaApiResponse'
          description: Successful Response
      summary: Create Customer Token
      tags:
      - Create Customer Token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--customers-customerId-token
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /customers/{customerId}/token/verification:
    post:
      description: 'Create a Customer Token Verification via API '
      operationId: CreateCustomerTokenVerification_viaApi
      parameters:
      - description: ID of the customer to create token for
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCustomerTokenVerificationViaApiRequest'
        description: Create Customer Token Verification Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreateCustomerTokenVerificationViaApiResponse'
          description: Successful Response
      summary: Create Customer Token Verification
      tags:
      - Create Customer Token Verification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--customers-customerId-token-verification
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /webhooks:
    get:
      description: 'Get List Webhooks from API '
      operationId: GetListWebhooks_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListWebhooks_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetListWebhooksFromApiResponse'
          description: Successful Response
      summary: Get List Webhooks
      tags:
      - Get List Webhooks
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--webhooks
      x-accepts: application/vnd.api+json
    post:
      description: 'Create a Webhook via API '
      operationId: CreateWebhook_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateWebhookViaApiRequest'
        description: Create Webhook Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateWebhookViaApiResponse'
          description: Successful Response
      summary: Create Webhook
      tags:
      - Create Webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--webhooks
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /webhooks/{webhookId}:
    get:
      description: 'Get a Webhook from API '
      operationId: GetWebhook_byId
      parameters:
      - description: ID of the webhook to get
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetWebhookByIdResponse'
          description: Successful Response
      summary: Get Webhook Id
      tags:
      - Get Webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--webhooks-webhookId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Webhook via API '
      operationId: UpdateWebhook_viaApi
      parameters:
      - description: ID of the Webhook to update
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookViaApiRequest'
        description: Update Webhook Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateWebhookViaApiResponse'
          description: Successful Response
      summary: Update Webhook
      tags:
      - Update Webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--webhooks-webhookId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /webhooks/{webhookId}/enable:
    post:
      description: 'Enable a Webhook via API '
      operationId: EnableWebhook_viaApi
      parameters:
      - description: ID of the webhook to enable
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EnableWebhookViaApiResponse'
          description: Successful Response
      summary: Enable Webhook
      tags:
      - Enable Webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--webhooks-webhookId-enable
      x-accepts: application/vnd.api+json; charset=utf-8
  /webhooks/{webhookId}/disable:
    post:
      description: 'Disable a Webhook via API '
      operationId: DisableWebhook_viaApi
      parameters:
      - description: ID of the webhook to disable
        explode: false
        in: path
        name: webhookId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DisableWebhookViaApiResponse'
          description: Successful Response
      summary: Disable a Webhook
      tags:
      - Disable Webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--webhooks-webhookId-disable
      x-accepts: application/vnd.api+json; charset=utf-8
  /atm-locations:
    get:
      description: 'Get List ATM Locations from API '
      operationId: GetAtmLocationsList_fromApi
      parameters:
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetAtmLocationsList_fromApi_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetAtmLocationsListFromApiResponse'
          description: Successful Response
      summary: Get List ATM Locations
      tags:
      - Get ATM Locations List
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--atm-locations
      x-accepts: application/vnd.api+json; charset=utf-8
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      description: 'Get a Transaction from API '
      operationId: GetTransaction_byId
      parameters:
      - description: ID of the account to get transaction from
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetTransactionByIdResponse'
          description: Successful Response
      summary: Get Transaction by Id
      tags:
      - Get Transaction
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--accounts-accountId-transactions-transactionId
      x-accepts: application/vnd.api+json; charset=utf-8
    patch:
      description: 'Update a Transaction via API '
      operationId: UpdateTransaction_viaApi
      parameters:
      - description: ID of the account to update transaction from
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the transaction to update
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateTransactionViaApiRequest'
        description: Update Transaction Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpdateTransactionViaApiResponse'
          description: Successful Response
      summary: Update Transaction
      tags:
      - Update Transaction
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-patch--accounts-accountId-transactions-transactionId
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /transactions:
    get:
      description: 'Get List Transactions from API '
      operationId: GetListTransactions_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListTransactions_fromApi_filter_parameter'
        style: deepObject
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GetListTransactionsFromApiResponse'
          description: Successful Response
      summary: Get List Transactions
      tags:
      - Get List Transactions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--transactions
      x-accepts: application/vnd.api+json
  /disputes:
    get:
      description: 'Get List Disputes from API '
      operationId: GetListDisputes_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListDisputes_fromApi_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListDisputesFromApiResponse'
          description: Successful Response
      summary: Get List Disputes
      tags:
      - Get List Disputes
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--disputes
      x-accepts: application/vnd.api+json; charset=utf-8
  /disputes/{disputeId}:
    get:
      description: 'Get a Dispute from API '
      operationId: GetDispute_byId
      parameters:
      - description: ID of the dispute to get
        explode: false
        in: path
        name: disputeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetDisputeByIdResponse'
          description: Successful Response
      summary: Get Dispute by Id
      tags:
      - Get Dispute
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--disputes-disputeId
      x-accepts: application/vnd.api+json; charset=utf-8
  /repayments:
    get:
      description: 'Get List Repayments from API '
      operationId: GetListRepayments_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - allowReserved: true
        explode: false
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListRepayments_fromApi_filter_parameter'
        style: deepObject
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListRepaymentsFromApiResponse'
          description: Successful Response
        "401":
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Get List Repayments
      tags:
      - Get List Repayments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--repayments
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create a Repayment via API '
      operationId: CreateARepayment_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateARepaymentViaApiRequest'
        description: Create a Repayment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreateARepaymentViaApiResponse'
          description: Successful Response
        default:
          $ref: '#/paths/~1accounts/get/responses/401'
      summary: Create a Repayment
      tags:
      - Create a Repayment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--repayments
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /repayments/{repaymentId}:
    get:
      description: 'Get an Repayment from API '
      operationId: GetRepayment_byId
      parameters:
      - description: ID of the repayment to get
        explode: false
        in: path
        name: repaymentId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1repayments/post/responses/201/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema'
          description: Successful Response
      summary: Get Repayment by Id
      tags:
      - Get Repayment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--repayments-repaymentId
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments:
    get:
      description: 'Get List Check Payments from API '
      operationId: GetListCheckPayments_fromApi
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/GetListCheckPayments_fromApi_filter_parameter'
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetListCheckPaymentsFromApiResponse'
          description: Successful Response
      summary: Get List Check Payments
      tags:
      - Get List Check Payments
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--check-payments
      x-accepts: application/vnd.api+json; charset=utf-8
    post:
      description: 'Create Check Payment via API '
      operationId: CreateCheckPayment_viaApi
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateCheckPaymentViaApiRequest'
        description: Create Check Payment Request
        required: true
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreateCheckPaymentViaApiResponse'
          description: Successful Response
      summary: Create Check Payment
      tags:
      - Create Check Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--check-payments
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json
  /check-payments/{checkPaymentId}:
    get:
      description: 'Get a Check Payment from API '
      operationId: GetCheckPayment_byId
      parameters:
      - description: ID of the check payment to get
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1check-payments/post/responses/201/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Get Check Payment by Id
      tags:
      - Get Check Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--check-payments-checkPaymentId
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/approve:
    post:
      description: 'Approve a Check Payment via API '
      operationId: ApproveCheckPayment_byId
      parameters:
      - description: ID of the check payment to approve
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ApproveCheckPaymentByIdRequest'
        description: Approve Check Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1check-payments/post/responses/201/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Approve Check Payment by Id
      tags:
      - Approve Check Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--check-payments-checkPaymentId-approve
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/cancel:
    post:
      description: 'Cancel a Check Payment via API '
      operationId: CancelCheckPayment_byId
      parameters:
      - description: ID of the check payment to cancel
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1check-payments/post/responses/201/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Cancel Check Payment by Id
      tags:
      - Cancel Check Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--check-payments-checkPaymentId-cancel
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/return:
    post:
      description: 'Return a Check Payment via API '
      operationId: ReturnCheckPayment_byId
      parameters:
      - description: ID of the check payment to return
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ReturnCheckPaymentByIdRequest'
        description: Return Check Payment Request
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json; charset=utf-8:
              schema:
                $ref: '#/paths/~1check-payments/post/responses/201/content/application~1vnd.api%2Bjson/schema'
          description: Successful Response
      summary: Return Check Payment by Id
      tags:
      - Return Check Payment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--check-payments-checkPaymentId-return
      x-content-type: application/vnd.api+json
      x-accepts: application/vnd.api+json; charset=utf-8
  /check-payments/{checkPaymentId}/front:
    get:
      description: 'Get front image via API '
      operationId: GetAFrontImage_viaApi
      parameters:
      - description: ID of the check payment
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/GetAFrontImageViaApiResponse'
          description: Successful Response
      summary: Get front image
      tags:
      - Get a front image
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--check-payments-checkPaymentId-front
      x-accepts: image/png
  /check-payments/{checkPaymentId}/back:
    get:
      description: 'Get back image via API '
      operationId: GetABackImage_byApi
      parameters:
      - description: ID of the check payment
        explode: false
        in: path
        name: checkPaymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/GetABackImageByApiResponse'
          description: Successful Response
      summary: Get back image
      tags:
      - Get a back image
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--check-payments-checkPaymentId-back
      x-accepts: image/png
  /stop-payments:
    get:
      operationId: StopPayment_getList
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/StopPayment_getList_filter_parameter'
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentGetListResponse'
          description: OK
      summary: Get a list of stop payments
      tags:
      - StopPayment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--stop-payments
      x-accepts: application/json
    post:
      operationId: StopPayment_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopPaymentCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPaymentCreateResponse'
          description: OK
      summary: Create Stop Payment
      tags:
      - StopPayment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--stop-payments
      x-content-type: application/json
      x-accepts: application/json
  /stop-payments/{stop_payment_id}:
    delete:
      operationId: StopPayment_cancel
      parameters:
      - description: ID of the stop payment
        explode: false
        in: path
        name: stop_payment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Stop payment successfully canceled
        "404":
          description: Stop payment not found
      summary: Cancel a stop payment
      tags:
      - StopPayment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--stop-payments-stop_payment_id
      x-accepts: application/json
    get:
      operationId: StopPayment_getDetails
      parameters:
      - description: ID of the stop payment
        explode: false
        in: path
        name: stop_payment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1stop-payments/post/responses/200/content/application~1json/schema'
          description: OK
        "404":
          description: Stop payment not found
      summary: Get details of a specific stop payment
      tags:
      - StopPayment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--stop-payments-stop_payment_id
      x-accepts: application/json
  /stop-payments/{stop_payment_id}/disable:
    post:
      operationId: StopPayment_disableStopPayment
      parameters:
      - description: ID of the stop payment
        explode: false
        in: path
        name: stop_payment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1stop-payments/post/responses/200/content/application~1json/schema'
          description: OK
        "404":
          description: Stop payment not found
      summary: Disable a stop payment
      tags:
      - StopPayment
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--stop-payments-stop_payment_id-disable
      x-accepts: application/json
components:
  schemas:
    UpdateApplicationViaApiRequest:
      properties:
        data: {}
      required:
      - data
      title: Patch Application
      type: object
    CancelApplicationByIdRequest:
      properties:
        data:
          $ref: '#/components/schemas/CancelApplicationByIdRequest_data'
      title: CancelApplicationRequest
      type: object
    CreateApplicationViaApiRequest:
      properties:
        data: {}
      required:
      - data
      type: object
    CreateApplicationFormViaApiRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateApplicationFormViaApiRequest_data'
      type: object
    UploadAPngDocumentForAnApplicationByIdRequest:
      type: object
    UploadAJpegDocumentForAnApplicationViaApiRequest:
      type: object
    UploadAPngDocumentForAnApplicationBackSidePutRequest:
      type: object
    UploadAJpegDocumentForAnApplicationBackSidePutRequest:
      type: object
    VerifyADocumentForAnApplicationPutRequest:
      example:
        jobId: jobId
      properties:
        jobId:
          type: string
      title: VerifyDocument
      type: object
    CreateAccountViaApiRequest:
      properties:
        data: {}
      required:
      - data
      type: object
    UpdateAccountViaApiRequest:
      properties:
        data: {}
      required:
      - data
      title: Update Account
      type: object
    FreezeAnAccountByIdRequest:
      properties:
        data:
          $ref: '#/components/schemas/FreezeAnAccountByIdRequest_data'
      title: FreezeAccountRequest
      type: object
    CloseAnAccountByIdRequest:
      properties:
        data:
          $ref: '#/components/schemas/CloseAccountRequest_Property'
      title: CloseAccountRequest
      type: object
    UpdateCustomerViaApiRequest:
      properties:
        data: {}
      title: Patch Customer
      type: object
    ArchiveCustomerByIdRequest:
      properties:
        type:
          enum:
          - archiveCustomer
          type: string
        attributes:
          $ref: '#/components/schemas/ArchiveCustomerByIdRequest_attributes'
      title: ArchiveCustomerRequest
      type: object
    CreateAPaymentViaApiRequest:
      properties:
        data: {}
      type: object
    UpdatePaymentViaApiRequest:
      properties:
        data: {}
      required:
      - data
      title: Patch Payment
      type: object
    UpdateReceivedPaymentViaApiRequest:
      properties:
        data: {}
      required:
      - data
      title: Patch Received Payment
      type: object
    CreateCounterpartyViaApiRequest:
      properties:
        data: {}
      type: object
    UpdateCounterpartyViaApiRequest:
      properties:
        data: {}
      required:
      - data
      title: Patch Counterparty
      type: object
    CreateRecurringPaymentViaApiRequest:
      properties:
        data: {}
      required:
      - data
      type: object
    CreateACardViaApiRequest:
      properties:
        data: {}
      type: object
    UpdateCardViaApiRequest:
      properties:
        data: {}
      required:
      - data
      title: Patch Card
      type: object
    ApproveAuthorizationRequestByIdRequest:
      properties:
        data:
          $ref: '#/paths/~1authorization-requests~1%7BauthorizationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/definitions/approveAuthorizationRequest'
      title: ApproveAuthorizationRequest
      type: object
    DeclineAuthorizationRequestViaApiRequest:
      properties:
        data:
          $ref: '#/paths/~1authorization-requests~1%7BauthorizationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/definitions/declineAuthorizationRequest'
      title: DeclineAuthorizationRequest
      type: object
    CreateRewardViaApiRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateRewardViaApiRequest_data'
      type: object
    CreateFeeViaApiRequest:
      type: object
    CreateCheckDepositViaApiRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateCheckDepositViaApiRequest_data'
      type: object
    UpdateCheckDepositByIdRequest:
      properties:
        data:
          $ref: '#/paths/~1check-deposits~1%7BcheckDepositId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/patchCheckDeposit'
      required:
      - data
      title: Patch Check Deposit
      type: object
    CreateOrgApiTokenViaApiRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateOrgApiTokenViaApiRequest_data'
      title: Create API Token
      type: object
    CreateCustomerTokenViaApiRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateCustomerTokenViaApiRequest_data'
      type: object
    CreateCustomerTokenVerificationViaApiRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateCustomerTokenVerificationViaApiRequest_data'
      type: object
    CreateWebhookViaApiRequest:
      properties:
        data:
          $ref: '#/components/schemas/CreateWebhookViaApiRequest_data'
      title: createWebhook
      type: object
    UpdateWebhookViaApiRequest:
      properties:
        data:
          $ref: '#/components/schemas/UpdateWebhookViaApiRequest_data'
      type: object
    UpdateTransactionViaApiRequest:
      properties:
        data: {}
      required:
      - data
      title: Patch Transaction
      type: object
    CreateARepaymentViaApiRequest:
      properties:
        data: {}
      type: object
    CreateCheckPaymentViaApiRequest:
      properties:
        data:
          $ref: '#/paths/~1check-payments/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/checkPayment'
      required:
      - data
      type: object
    ApproveCheckPaymentByIdRequest:
      properties:
        data:
          $ref: '#/components/schemas/ApproveCheckPaymentByIdRequest_data'
      title: ApproveCheckPaymentRequest
      type: object
    ReturnCheckPaymentByIdRequest:
      properties:
        data:
          $ref: '#/components/schemas/ReturnCheckPaymentByIdRequest_data'
      title: ReturnCheckPaymentRequest
      type: object
    StopPaymentCreateRequest:
      example:
        data: "{}"
      properties:
        data:
          $ref: '#/paths/~1stop-payments/post/requestBody/content/application~1json/schema/definitions/stopPayment'
      required:
      - data
      type: object
    GetApplicationByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1applications/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
        included:
          $ref: '#/paths/~1transactions/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/included'
      title: UnitApplicationResponseWithIncluded
      type: object
      x-konfig-is-used-in-successful-response: true
    CancelApplicationByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1applications/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
        included:
          items:
            $ref: '#/paths/~1applications/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/included/items'
          type: array
      title: UnitCancelApplicationResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListApplicationsFromApiResponse:
      title: UnitError
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListApplicationsFromApi200Response:
      example:
        data:
        - "{}"
        - "{}"
        meta:
          pagination:
            total: 1
            offset: 6
            limit: 0
      properties:
        data:
          items:
            $ref: '#/paths/~1applications/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
          type: array
        meta:
          $ref: '#/components/schemas/GetListApplicationsFromApi200Response_meta'
      title: UnitListApplicationsResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateApplicationViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Application_Property'
        included:
          items:
            $ref: '#/components/schemas/Application_Document_Document'
          type: array
      title: UnitCreateApplicationResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListApplicationFormsViaApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1application-forms/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
          type: array
      title: UnitApplicationFormsListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateApplicationFormViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Application_Form_Property'
      title: UnitApplicationFormResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListOfDocumentsViaApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1applications/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/included/items'
          type: array
      title: UnitListDocumentsResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateADocumentForAnApplicationViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1applications/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/included/items'
      title: UnitDocumentResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    DownloadADocumentViaApiResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    DownloadADocumentBackSideViaApiResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    GetApplicationFormByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1application-forms/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
        included:
          $ref: '#/paths/~1applications/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitApplicationFormResponseWithIncluded
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListAccountsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Account_Document'
          type: array
        included:
          items:
            $ref: '#/paths/~1customers/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/items'
          type: array
        meta:
          $ref: '#/paths/~1applications/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/meta'
      title: UnitAccountsListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetAccountByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1accounts/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/items'
        included:
          items:
            $ref: '#/paths/~1customers/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/items'
          type: array
      title: UnitAccountResponseWithIncluded
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdateAccountViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1accounts/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/items'
      title: UnitAccountResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetAccountLimitsByIdResponse:
      properties:
        data:
          $ref: '#/components/schemas/GetAccountLimitsByIdResponse_data'
      title: UnitGetAccountLimitsResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListAccountEndofdayBalancesHistoryFromApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Account_End_Of_Day_Resource_Property'
      title: UnitGetAccountEndOfDayListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdateCustomerViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1customers/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/items'
      title: UnitCustomerResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListCustomersApiListResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
        meta:
          $ref: '#/paths/~1applications/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/meta'
      title: UnitCustomersListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListPaymentsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1payments~1%7BpaymentId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
          type: array
        included:
          $ref: '#/paths/~1transactions/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/included'
        meta:
          $ref: '#/paths/~1applications/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/meta'
      title: UnitPaymentsListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetPaymentByIdResponse:
      properties:
        data:
          $ref: '#/components/schemas/Payment_Resource_Property'
        included:
          $ref: '#/paths/~1transactions/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/included'
      title: UnitPaymentResponseWithIncluded
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdatePaymentViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1payments~1%7BpaymentId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
      title: UnitPaymentResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetReceivedPaymentsListFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1received-payments~1%7BpaymentId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
          type: array
        included:
          $ref: '#/paths/~1transactions/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/included'
        meta:
          $ref: '#/paths/~1applications/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/meta'
      title: UnitReceivedPaymentListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetReceivedPaymentByIdResponse:
      properties:
        data:
          $ref: '#/components/schemas/Received_Payment_Resource_Property'
        included:
          $ref: '#/paths/~1transactions/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/included'
      title: UnitReceivedPaymentResponseWithIncluded
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdateReceivedPaymentViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1received-payments~1%7BpaymentId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
      title: UnitReceivedPaymentResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListCounterpartiesFromApiResponse:
      properties:
        data:
          $ref: '#/paths/~1counterparties/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCounterpartiesListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateCounterpartyViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Counterparty_Document_Property'
      title: UnitCounterpartyResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetCounterpartyByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1counterparties/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCounterpartyResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdateCounterpartyViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1counterparties/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCounterpartyResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetCounterpartyBalanceRecurringPaymentFromApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Counterparty_Balance_Property'
      title: UnitCounterpartyResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListRecurringPaymentsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Recurring_Payment_Resource'
          type: array
        meta:
          $ref: '#/paths/~1applications/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/meta'
      title: UnitRecurringPaymentListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateRecurringPaymentViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1recurring-payments/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/items'
      title: UnitRecurringPaymentResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListOfCardsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1cards~1%7BcardId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
          type: array
        included:
          items:
            $ref: '#/paths/~1transactions/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/included'
          type: array
      title: UnitCardResponseCardsList
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateACardViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1cards~1%7BcardId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetCardByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1cards~1%7BcardId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
        included:
          items:
            $ref: '#/paths/~1transactions/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/included'
          type: array
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdateCardViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Card_Document_Property'
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetCardPinStatusPinStatusResponse:
      properties:
        data:
          $ref: '#/paths/~1cards~1%7BcardId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/pinStatus'
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    ReportCardAsStolenViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1cards~1%7BcardId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    ReportCardAsLostViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1cards~1%7BcardId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CloseACardViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1cards~1%7BcardId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    FreezeACardViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1cards~1%7BcardId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    UnfreezeACardByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1cards~1%7BcardId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetCardLimitsByIdResponse:
      properties:
        data:
          $ref: '#/components/schemas/Account_Limits_Resource_Property'
      title: UnitCardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListAuthorizationsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1authorizations~1%7BauthorizationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
          type: array
      title: UnitListAuthorizationsResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetAuthorizationByIdResponse:
      properties:
        data:
          $ref: '#/components/schemas/Authorization_Document_Property'
      title: UnitAuthorizationResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListAuthorizationRequestsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1authorization-requests~1%7BauthorizationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
          type: array
      title: UnitListAuthorizationRequestsResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetAuthorizationRequestByIdResponse:
      properties:
        data:
          $ref: '#/components/schemas/AuthorizationRequest_Document_Property'
      title: UnitAuthorizationRequestsResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    ApproveAuthorizationRequestByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1authorization-requests~1%7BauthorizationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
      title: UnitAuthorizationRequestResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    DeclineAuthorizationRequestViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1authorization-requests~1%7BauthorizationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
      title: UnitAuthorizationRequestResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListStatementsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
      title: UnitStatementsResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetStatementHtmlByIdResponse:
      type: string
      x-konfig-is-used-in-successful-response: true
    GetStatementPdfByIdResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    GetBankVerificationPdfFromApiResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    GetListRewardsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1rewards/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
          type: array
      title: UnitRewardsListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateRewardViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Reward_Property'
      title: UnitRewardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetRewardByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1rewards/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitRewardResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListEventsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1events~1%7BeventId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
          type: array
      title: UnitEventListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetEventByIdResponse:
      properties:
        data:
          $ref: '#/components/schemas/Event_Resource_Property'
      title: UnitEventResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    FireEventByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1events~1%7BeventId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data'
      title: UnitEventResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetInstitutionByRoutingNumberResponse:
      properties:
        data:
          $ref: '#/components/schemas/Institution_Resource_Property'
      title: UnitInstitutionResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateFeeViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Fee_Property'
      title: UnitFeeResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListCheckDepositsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1check-deposits/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
          type: array
      title: UnitListCheckDepositsResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateCheckDepositViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Check_Deposit_Property'
      title: UnitCheckDepositResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetCheckDepositByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1check-deposits/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCheckDepositResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdateCheckDepositByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1check-deposits/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCheckDepositResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    ConfirmCheckDepositByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1check-deposits/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitCheckDepositResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetCheckDepositFrontImageByIdResponse:
      properties:
        data:
          type: string
      title: UnitCheckDepositResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetCheckDepositBackImageByIdResponse:
      properties:
        data:
          type: string
      title: UnitCheckDepositResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListOrgApiTokensFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1users~1%7BuserId%7D~1api-tokens/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
          type: array
      title: UnitOrgApiTokensListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateOrgApiTokenViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/apiToken_Property'
      title: UnitApiTokenResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    RevokeOrgApiTokenRewardByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1users~1%7BuserId%7D~1api-tokens/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitApiTokenResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateCustomerTokenViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/CustomerToken_Property'
      title: UnitCustomerTokenResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateCustomerTokenVerificationViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/CustomerTokenVerification_Property'
      title: UnitCustomerTokenVerificationResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListWebhooksFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1webhooks/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
          type: array
      title: UnitWebhooksListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateWebhookViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Webhook_Property'
      title: UnitWebhookResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetWebhookByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1webhooks/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitWebhookResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdateWebhookViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1webhooks/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitWebhookResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    EnableWebhookViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1webhooks/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitWebhookResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    DisableWebhookViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1webhooks/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data'
      title: UnitWebhookResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetAtmLocationsListFromApiResponse:
      items:
        $ref: '#/components/schemas/AtmLocation'
      title: UnitAtmLocationsListResponse
      type: array
      x-konfig-is-used-in-successful-response: true
    GetTransactionByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1accounts~1%7BaccountId%7D~1transactions~1%7BtransactionId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
        included:
          $ref: '#/paths/~1transactions/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/included'
      title: UnitTransactionResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    UpdateTransactionViaApiResponse:
      properties:
        data:
          $ref: '#/components/schemas/Transaction_Resource_Property'
      title: UnitTransactionResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListTransactionsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/paths/~1accounts~1%7BaccountId%7D~1transactions~1%7BtransactionId%7D/patch/responses/200/content/application~1vnd.api%2Bjson/schema/properties/data'
          type: array
        included:
          items:
            $ref: '#/components/schemas/GetListTransactionsFromApiResponse_included_inner'
          type: array
        meta:
          $ref: '#/paths/~1applications/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/meta'
      title: UnitTransactionsListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListDisputesFromApiResponse:
      items:
        $ref: '#/components/schemas/Dispute_Document'
      title: UnitDisputesListResponse
      type: array
      x-konfig-is-used-in-successful-response: true
    GetDisputeByIdResponse:
      properties:
        data:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items'
      title: UnitDisputeResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListRepaymentsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Repayment_Resource'
          type: array
        meta:
          $ref: '#/paths/~1applications/get/responses/200/content/application~1vnd.api%2Bjson/schema/properties/meta'
      title: UnitRepaymentsListResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateARepaymentViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1repayments/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/items'
      title: UnitRepaymentResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetListCheckPaymentsFromApiResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Check_Payment_Resource'
          type: array
      title: UnitListCheckPaymentsResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    CreateCheckPaymentViaApiResponse:
      properties:
        data:
          $ref: '#/paths/~1check-payments/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/items'
      title: UnitCheckPaymentResponse
      type: object
      x-konfig-is-used-in-successful-response: true
    GetAFrontImageViaApiResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    GetABackImageByApiResponse:
      format: binary
      type: string
      x-konfig-is-used-in-successful-response: true
    StopPaymentGetListResponse:
      example:
        data:
        - "{}"
        - "{}"
      properties:
        data:
          items:
            $ref: '#/paths/~1stop-payments/post/responses/200/content/application~1json/schema/properties/data'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    StopPaymentCreateResponse:
      example:
        data:
          relationships:
            checkPayments:
              data:
              - id: "{}"
                type: checkPayment
              - id: "{}"
                type: checkPayment
            customers: "{}"
            account:
              data:
                id: "{}"
                type: depositAccount
            customer:
              data:
                id: "{}"
                type: businessCustomer
          attributes:
            createdAt: 2000-01-23T04:56:07.000+00:00
            amount: 1
            checkNumber: checkNumber
            tags: "{}"
            updatedAt: 2000-01-23T04:56:07.000+00:00
            status: Active
          id: "{}"
          type: stopPayment
      properties:
        data:
          $ref: '#/components/schemas/Stop_Payment_Property'
      type: object
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-paths--cards-get-parameters-0-schema-properties-limit:
      example: 100
      type: number
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-get-parameters-0-schema-properties-offset:
      example: 0
      type: number
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateApplicationViaApiRequest-definitions-grantor-properties-address-properties-country
    : example: US
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateApplicationViaApiRequest-definitions-patchIndividualApplication-properties-type
    : example: individualApplication
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateApplicationViaApiRequest-definitions-patchBusinessApplication-properties-type:
      example: businessApplication
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateApplicationViaApiRequest-definitions-patchBusinessApplicationOfficer-properties-type
    : example: businessApplication
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateApplicationViaApiRequest-definitions-patchBusinessApplicationBeneficialOwner-properties-type
    : example: beneficialOwner
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateApplicationViaApiRequest-definitions-patchTrustApplication-properties-type:
      example: trustApplication
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateApplicationViaApiRequest-definitions-patchSoleProprietorApplication-properties-type
    : example: individualApplication
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationViaApiRequest-definitions-evaluationParams-properties-requireIdVerification
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationViaApiRequest-definitions-CreateIndividualApplication-properties-type
    : example: individualApplication
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationViaApiRequest-definitions-CreateSoleProprietorApplication-properties-type
    : example: individualApplication
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationViaApiRequest-definitions-CreateSoleProprietorApplication-properties-attributes-properties-soleProprietorship
    : example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateApplicationViaApiRequest-definitions-CreateBusinessApplication-properties-type:
      example: businessApplication
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateApplicationViaApiRequest-definitions-CreateTrustApplication-properties-type:
      example: trustApplication
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationFormViaApiRequest-definitions-requireIdVerification-properties-individual
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationFormViaApiRequest-definitions-requireIdVerification-properties-officer
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationFormViaApiRequest-definitions-requireIdVerification-properties-beneficialOwners
    : example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateApplicationFormViaApiRequest-properties-data-properties-type:
      example: applicationForm
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAccountViaApiRequest-definitions-CreateCreditAccount-properties-type:
      example: creditAccount
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAccountViaApiRequest-definitions-CreateDepositAccount-properties-type:
      example: depositAccount
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateAccountViaApiRequest-definitions-CreateDepositAccount-properties-relationships-properties-customers-properties-data-items-properties-type
    : example: customer
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateAccountViaApiRequest-definitions-updateDepositAccount-properties-type:
      example: depositAccount
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateAccountViaApiRequest-definitions-updateCreditAccount-properties-type:
      example: creditAccount
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CloseAnAccountByIdRequest-properties-data-properties-attributes-properties-reason:
      example: ByCustomer
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateCustomerViaApiRequest-definitions-relationships-properties-org-properties-data-properties-type
    : example: org
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAPaymentViaApiRequest-definitions-CreateAchPayment-properties-type:
      example: achPayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAPaymentViaApiRequest-definitions-CreateAchPaymentCounterparty-properties-type:
      example: achPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateAPaymentViaApiRequest-definitions-CreateAchPaymentCounterparty-properties-attributes-properties-verifyCounterpartyBalance
    : example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAPaymentViaApiRequest-definitions-CreateAchPaymentPlaid-properties-type:
      example: achPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateAPaymentViaApiRequest-definitions-CreateAchPaymentPlaid-properties-attributes-properties-verifyCounterpartyBalance
    : example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAPaymentViaApiRequest-definitions-CreateBookPayment-properties-type:
      example: bookPayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAPaymentViaApiRequest-definitions-CreateWirePayment-properties-type:
      example: wirePayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAPaymentViaApiRequest-definitions-CreateBillPayment-properties-type:
      example: billPayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateAPaymentViaApiRequest-definitions-CreatePushToCardPayment-properties-type:
      example: pushToCardPayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdatePaymentViaApiRequest-definitions-patchAchPayment-properties-type:
      example: achPayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdatePaymentViaApiRequest-definitions-patchBookPayment-properties-type:
      example: bookPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateReceivedPaymentViaApiRequest-definitions-patchAchReceivedPayment-properties-type
    : example: achReceivedPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateCounterpartyViaApiRequest-definitions-CreatePlaidCounterparty-properties-attributes-properties-verifyName
    : example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateCounterpartyViaApiRequest-definitions-patchCounterparty-properties-type:
      example: counterparty
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateCounterpartyViaApiRequest-definitions-patchCounterparty-properties-attributes-properties-verifyName
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateRecurringPaymentViaApiRequest-definitions-createRecurringCreditAchPayment-properties-type
    : example: recurringCreditAchPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateRecurringPaymentViaApiRequest-definitions-createRecurringDebitAchPayment-properties-type
    : example: recurringDebitAchPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateRecurringPaymentViaApiRequest-definitions-createRecurringDebitAchPayment-properties-attributes-properties-sameDay
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateRecurringPaymentViaApiRequest-definitions-createRecurringDebitAchPayment-properties-attributes-properties-verifyCounterpartyBalance
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateRecurringPaymentViaApiRequest-definitions-createRecurringCreditBookPayment-properties-type
    : example: recurringCreditBookPayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateACardViaApiRequest-definitions-CreateIndividualDebitCard-properties-type:
      example: individualDebitCard
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateACardViaApiRequest-definitions-CreateBusinessDebitCard-properties-type:
      example: businessDebitCard
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateACardViaApiRequest-definitions-CreateBusinessCreditCard-properties-type:
      example: businessCreditCard
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateACardViaApiRequest-definitions-CreateIndividualVirtualDebitCard-properties-type
    : example: individualVirtualDebitCard
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateACardViaApiRequest-definitions-CreateBusinessVirtualDebitCard-properties-type:
      example: businessVirtualDebitCard
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateACardViaApiRequest-definitions-CreateBusinessVirtualCreditCard-properties-type:
      example: businessVirtualCreditCard
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateRewardViaApiRequest-definitions-createRewardRelationships-properties-rewardedTransaction-properties-data-properties-type
    : example: transaction
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateRewardViaApiRequest-properties-data-properties-type:
      example: reward
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateFeeViaApiRequest-data-properties-type:
      example: fee
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCheckDepositViaApiRequest-properties-data-properties-type:
      example: checkDeposit
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateCheckDepositByIdRequest-definitions-patchCheckDeposit-properties-type:
      example: checkDeposit
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateOrgApiTokenViaApiRequest-properties-data-properties-type:
      example: apiToken
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCustomerTokenViaApiRequest-properties-data-properties-type:
      example: customerToken
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCustomerTokenVerificationViaApiRequest-properties-data-properties-type:
      example: customerTokenVerification
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateWebhookViaApiRequest-properties-data-properties-type:
      example: webhook
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateTransactionViaApiRequest-definitions-patchTransactionTags-properties-type:
      example: transaction
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UpdateTransactionViaApiRequest-definitions-patchBookTransaction-properties-type:
      example: bookTransaction
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiRequest-definitions-patchChargebackTransaction-properties-type
    : example: chargebackTransaction
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateARepaymentViaApiRequest-definitions-CreateAchRepayment-properties-type:
      example: achRepayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateARepaymentViaApiRequest-definitions-CreateBookRepayment-properties-type:
      example: bookRepayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCheckPaymentViaApiRequest-definitions-checkPayment-properties-type:
      example: checkPayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ApproveCheckPaymentByIdRequest-properties-data-properties-type:
      example: additionalVerification
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-ReturnCheckPaymentByIdRequest-properties-data-properties-type:
      example: checkPaymentReturn
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StopPaymentCreateRequest-definitions-stopPayment-properties-type:
      example: stopPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationViaApiResponse-properties-data-definitions-applicationRelationships-properties-documents-properties-data-items-properties-type
    : example: document
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationViaApiResponse-properties-data-definitions-applicationRelationships-properties-trustees-properties-data-items-properties-type
    : example: trustee
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationViaApiResponse-properties-data-definitions-applicationRelationships-properties-beneficiaries-properties-data-items-properties-type
    : example: beneficiary
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateApplicationViaApiResponse-properties-data-definitions-applicationRelationships-properties-beneficialOwners-properties-data-items-properties-type
    : example: beneficialOwner
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateApplicationViaApiResponse-properties-included-items-properties-type:
      example: document
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateApplicationFormViaApiResponse-properties-data-properties-type:
      example: applicationForm
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountsFromApiResponse-properties-data-items-definitions-DepositAccount-allOf-1-properties-attributes-properties-currency
    : example: USD
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountsFromApiResponse-properties-data-items-definitions-CreditAccount-allOf-1-properties-attributes-properties-currency
    : example: USD
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountsFromApiResponse-properties-data-items-definitions-orgGeneralLedgerAccount-properties-type
    : example: orgGeneralLedgerAccount
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountsFromApiResponse-properties-data-items-definitions-orgGeneralLedgerAccount-properties-attributes-properties-currency
    : example: USD
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountsFromApiResponse-properties-data-items-definitions-glAccount-properties-type
    : example: glAccount
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountsFromApiResponse-properties-data-items-definitions-glAccount-properties-attributes-properties-currency
    : example: USD
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountsFromApiResponse-properties-data-items-definitions-batchAccount-properties-type
    : example: batchAccount
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountsFromApiResponse-properties-data-items-definitions-batchAccount-properties-attributes-properties-currency
    : example: USD
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountEndofdayBalancesHistoryFromApiResponse-properties-data-definitions-relationships-properties-customer-properties-data-properties-type
    : example: customer
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListAccountEndofdayBalancesHistoryFromApiResponse-properties-data-definitions-relationships-properties-account-properties-data-properties-type
    : example: account
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListCustomersApiListResponse-properties-data-items-definitions-IndividualCustomer-allOf-1-properties-attributes-properties-soleProprietorship
    : example: "false"
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetPaymentByIdResponse-properties-data-definitions-paymentRelationships-properties-customers-properties-data-items-properties-type
    : example: org
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetReceivedPaymentByIdResponse-properties-data-definitions-receivedPaymentRelationships-properties-account-properties-data-properties-type
    : example: account
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetReceivedPaymentByIdResponse-properties-data-definitions-receivedPaymentRelationships-properties-receivePaymentTransaction-properties-data-properties-type
    : example: transaction
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetReceivedPaymentByIdResponse-properties-data-definitions-receivedPaymentRelationships-properties-paymentAdvanceTransaction-properties-data-properties-type
    : example: transaction
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetReceivedPaymentByIdResponse-properties-data-definitions-receivedPaymentRelationships-properties-repayPaymentAdvanceTransaction-properties-data-properties-type
    : example: transaction
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateCounterpartyViaApiResponse-properties-data-definitions-counterpartyRelationships-properties-customer-properties-data-properties-type
    : example: customer
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetCounterpartyBalanceRecurringPaymentFromApiResponse-properties-data-definitions-counterpartyBalanceRelationships-properties-counterparty-properties-data-properties-type
    : example: counterparty
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetCounterpartyBalanceRecurringPaymentFromApiResponse-properties-data-definitions-counterpartyBalanceRelationships-properties-customer-properties-data-properties-type
    : example: customer
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetCounterpartyBalanceRecurringPaymentFromApiResponse-properties-data-properties-type
    : example: counterpartyBalance
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListRecurringPaymentsFromApiResponse-properties-data-items-definitions-RecurringDebitAchPayment-allOf-1-properties-attributes-properties-verifyCounterpartyBalance
    : example: false
      type: boolean
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListRecurringPaymentsFromApiResponse-properties-data-items-definitions-RecurringDebitAchPayment-allOf-1-properties-attributes-properties-sameDay
    : example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GetAuthorizationByIdResponse-properties-data-properties-type:
      example: authorization
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetAuthorizationRequestByIdResponse-properties-data-definitions-approveAuthorizationRequest-properties-type
    : example: approveAuthorizationRequest
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetAuthorizationRequestByIdResponse-properties-data-definitions-declineAuthorizationRequest-properties-type
    : example: declineAuthorizationRequest
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetAuthorizationRequestByIdResponse-properties-data-definitions-authorizationRequestRelationships-properties-customer-properties-data-properties-type
    : example: customer
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetAuthorizationRequestByIdResponse-properties-data-definitions-authorizationRequestRelationships-properties-account-properties-data-properties-type
    : example: account
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetAuthorizationRequestByIdResponse-properties-data-definitions-authorizationRequestRelationships-properties-fundingAccount-properties-data-properties-type
    : example: account
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetAuthorizationRequestByIdResponse-properties-data-definitions-authorizationRequestRelationships-properties-card-properties-data-properties-type
    : example: card
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateRewardViaApiResponse-properties-data-definitions-rewardRelationships-properties-transaction-properties-data-properties-type
    : example: transaction
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateRewardViaApiResponse-properties-data-definitions-rewardRelationships-properties-card-properties-data-properties-type
    : example: card
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateRewardViaApiResponse-properties-data-properties-type:
      example: reward
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GetInstitutionByRoutingNumberResponse-properties-data-properties-type:
      example: institution
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateFeeViaApiResponse-properties-data-properties-type:
      example: fee
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-CreateCheckDepositViaApiResponse-properties-data-definitions-checkDepositRelationships-properties-transaction-properties-data-properties-type
    : example: transaction
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateOrgApiTokenViaApiResponse-properties-data-properties-type:
      example: apiToken
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCustomerTokenViaApiResponse-properties-data-properties-type:
      example: customerToken
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateCustomerTokenVerificationViaApiResponse-properties-data-properties-type:
      example: customerTokenVerification
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CreateWebhookViaApiResponse-properties-data-properties-type:
      example: webhook
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GetAtmLocationsListFromApiResponse-items-properties-type:
      example: atmLocation
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-counterpartyAccount-properties-data-properties-type
    : example: account
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-counterpartyCustomer-properties-data-properties-type
    : example: customer
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-relatedTransaction-properties-data-properties-type
    : example: transaction
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-authorization-properties-data-properties-type
    : example: authorization
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-returned-properties-data-properties-type
    : example: transaction
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-payment-properties-data-properties-type
    : example: payment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-checkPayment-properties-data-properties-type
    : example: payment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-repayment-properties-data-properties-type
    : example: repayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-recurringPayment-properties-data-properties-type
    : example: recurringPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-card-properties-data-properties-type
    : example: card
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-incomingAch-properties-data-properties-type
    : example: incomingAch
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-checkDeposit-properties-data-properties-type
    : example: checkDeposit
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-authorizationRequest-properties-data-properties-type
    : example: authorizationRequest
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-receivedPayment-properties-data-properties-type
    : example: receivedPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-chargeback-properties-data-properties-type
    : example: chargeback
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-UpdateTransactionViaApiResponse-properties-data-definitions-transactionRelationships-properties-reward-properties-data-properties-type
    : example: reward
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GetListDisputesFromApiResponse-items-properties-type:
      example: dispute
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListRepaymentsFromApiResponse-properties-data-items-definitions-AchRepayment-allOf-1-properties-relationships-properties-creditAccount-properties-data-properties-type
    : example: creditAccount
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListRepaymentsFromApiResponse-properties-data-items-definitions-AchRepayment-allOf-1-properties-relationships-properties-counterparty-properties-data-properties-type
    : example: counterparty
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListRepaymentsFromApiResponse-properties-data-items-definitions-AchRepayment-allOf-1-properties-relationships-properties-payment-properties-data-properties-type
    : example: payment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListRepaymentsFromApiResponse-properties-data-items-definitions-BookRepayment-allOf-1-properties-relationships-properties-creditAccount-properties-data-properties-type
    : example: creditAccount
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListRepaymentsFromApiResponse-properties-data-items-definitions-BookRepayment-allOf-1-properties-relationships-properties-counterpartyAccount-properties-data-properties-type
    : example: account
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListRepaymentsFromApiResponse-properties-data-items-definitions-BookRepayment-allOf-1-properties-relationships-properties-payment-properties-data-properties-type
    : example: payment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GetListCheckPaymentsFromApiResponse-properties-data-items-properties-type:
      example: checkPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-GetListCheckPaymentsFromApiResponse-properties-data-items-properties-relationships-properties-transaction-properties-data-properties-type
    : example: transaction
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-StopPaymentCreateResponse-properties-data-properties-type:
      example: stopPayment
      type: string
      x-do-not-generate: true
    ? konfig-generated-schema-components-schemas-StopPaymentCreateResponse-properties-data-properties-relationships-properties-checkPayments-properties-data-items-properties-type
    : example: checkPayment
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--applications-applicationId:
      properties:
        applicationId:
          type: string
        included:
          type: string
      required:
      - applicationId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
      - included
    konfig-generated-schema-single-parameter-schema-patch--applications-applicationId:
      properties:
        applicationId:
          type: string
        data: {}
      required:
      - applicationId
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
    konfig-generated-schema-single-parameter-schema-post--applications-applicationId-cancel:
      properties:
        applicationId:
          type: string
        data:
          properties:
            type:
              enum:
              - cancelApplication
              type: string
            attributes:
              properties:
                reason:
                  type: string
              type: object
          type: object
      required:
      - applicationId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
    konfig-generated-schema-single-parameter-schema-get--applications:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            query:
              type: string
            status:
              items:
                enum:
                - AwaitingDocuments
                - PendingReview
                - Pending
                - Approved
                - Denied
                - Canceled
                type: string
              type: array
            email:
              type: string
          type: object
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
    konfig-generated-schema-single-parameter-schema-post--applications:
      properties:
        data: {}
      required:
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--application-forms:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            query:
              type: string
            status:
              items:
                enum:
                - Pending
                - Approved
                type: string
              type: array
            email:
              type: string
          type: object
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
    konfig-generated-schema-single-parameter-schema-post--application-forms:
      properties:
        data:
          properties:
            type:
              default: applicationForm
              example: applicationForm
              type: string
              x-konfig-original-example: applicationForm
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateApplicationFormViaApiRequest-properties-data-properties-type
            attributes:
              properties:
                tags:
                  $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
                applicantDetails:
                  $ref: '#/paths/~1application-forms/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/ApplicationFormPrefill'
                settingsOverride:
                  $ref: '#/paths/~1application-forms/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/ApplicationFormSettingsOverride'
                requireIdVerification:
                  $ref: '#/paths/~1application-forms/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/requireIdVerification'
                allowedApplicationTypes:
                  items:
                    enum:
                    - Individual
                    - Business
                    - SoleProprietorship
                    type: string
                  type: array
                lang:
                  enum:
                  - en
                  - es
                  type: string
                hideApplicationProgressTracker:
                  type: boolean
              type: object
            relationships:
              properties:
                application:
                  $ref: '#/paths/~1check-deposits/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/createCheckDepositRelationships/properties/account'
              title: createApplicationFormRelationships
              type: object
          required:
          - type
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId:
      properties:
        applicationId:
          type: string
        documentId:
          type: string
      required:
      - applicationId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
      - documentId
    konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId-?:
      properties:
        applicationId:
          type: string
        documentId:
          type: string
      required:
      - applicationId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
      - documentId
    konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId-back:
      properties:
        applicationId:
          type: string
        documentId:
          type: string
      required:
      - applicationId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
      - documentId
    konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId-back-?:
      properties:
        applicationId:
          type: string
        documentId:
          type: string
      required:
      - applicationId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
      - documentId
    konfig-generated-schema-single-parameter-schema-get--applications-applicationId-documents:
      properties:
        applicationId:
          type: string
      required:
      - applicationId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
    konfig-generated-schema-single-parameter-schema-post--applications-applicationId-documents:
      properties:
        applicationId:
          type: string
      required:
      - applicationId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
    konfig-generated-schema-single-parameter-schema-put--applications-applicationId-documents-documentId-verify:
      properties:
        applicationId:
          type: string
        documentId:
          type: string
        jobId:
          type: string
      required:
      - applicationId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
      - documentId
    konfig-generated-schema-single-parameter-schema-get--applications-applicationId-documents-documentId-download:
      properties:
        applicationId:
          type: string
        documentId:
          type: string
      required:
      - applicationId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
      - documentId
    konfig-generated-schema-single-parameter-schema-get--applications-applicationId-documents-documentId-download-back:
      properties:
        applicationId:
          type: string
        documentId:
          type: string
      required:
      - applicationId
      - documentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationId
      - documentId
    konfig-generated-schema-single-parameter-schema-get--application-forms-applicationFormId:
      properties:
        applicationFormId:
          type: string
        included:
          type: string
      required:
      - applicationFormId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - applicationFormId
      - included
    konfig-generated-schema-single-parameter-schema-get--accounts:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            customerId:
              type: string
            status:
              items:
                enum:
                - Open
                - Frozen
                - Closed
                type: string
              type: array
            type:
              items:
                enum:
                - deposit
                - credit
                type: string
              type: array
            fromBalance:
              type: number
            toBalance:
              type: number
          type: object
        include:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - include
    konfig-generated-schema-single-parameter-schema-post--accounts:
      properties:
        data: {}
      required:
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId:
      properties:
        accountId:
          type: string
        include:
          type: string
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
      - include
    konfig-generated-schema-single-parameter-schema-patch--accounts-accountId:
      properties:
        accountId:
          type: string
        data: {}
      required:
      - accountId
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-limits:
      properties:
        accountId:
          type: string
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-unfreeze:
      properties:
        accountId:
          type: string
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-freeze:
      properties:
        accountId:
          type: string
        data:
          properties:
            type:
              enum:
              - creditAccountFreeze
              - accountFreeze
              type: string
            attributes:
              properties:
                reason:
                  enum:
                  - Fraud
                  - Other
                  type: string
                reasonText:
                  nullable: true
                  type: string
              type: object
          type: object
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-close:
      properties:
        accountId:
          type: string
        data:
          properties:
            type:
              enum:
              - creditAccountClose
              - depositAccountClose
              type: string
            attributes:
              properties:
                reason:
                  default: ByCustomer
                  enum:
                  - ByCustomer
                  - Fraud
                  example: ByCustomer
                  type: string
                  x-konfig-original-example: ByCustomer
                  x-konfig-generated-schema: konfig-generated-schema-components-schemas-CloseAnAccountByIdRequest-properties-data-properties-attributes-properties-reason
                fraudReason:
                  enum:
                  - ACHActivity
                  - CardActivity
                  - CheckActivity
                  - ApplicationHistory
                  - AccountActivity
                  - ClientIdentified
                  - IdentityTheft
                  - LinkedToFraudulentCustomer
                  nullable: true
                  type: string
              type: object
          title: CloseAccountRequest
          type: object
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-reopen:
      properties:
        accountId:
          type: string
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-enter-daca:
      properties:
        accountId:
          type: string
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-activate-daca:
      properties:
        accountId:
          type: string
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-post--accounts-accountId-deactivate-daca:
      properties:
        accountId:
          type: string
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-get--account-end-of-day:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--customers-customerId:
      properties:
        customerId:
          type: string
      required:
      - customerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - customerId
    konfig-generated-schema-single-parameter-schema-patch--customers-customerId:
      properties:
        customerId:
          type: string
        data: {}
      required:
      - customerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - customerId
    konfig-generated-schema-single-parameter-schema-get--customers:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            query:
              type: string
            status:
              items:
                enum:
                - Active
                - Archived
                type: string
              type: array
            email:
              type: string
          type: object
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
    konfig-generated-schema-single-parameter-schema-post--customers-customerId-archive:
      properties:
        customerId:
          type: string
        type:
          enum:
          - archiveCustomer
          type: string
        attributes:
          properties:
            reason:
              enum:
              - Inactive
              - FraudACHActivity
              - FraudCardActivity
              - FraudCheckActivity
              - FraudApplicationHistory
              - FraudAccountActivity
              - FraudClientIdentified
              - FraudLinkedToFraudulentCustomer
              type: string
          type: object
      required:
      - customerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - customerId
    konfig-generated-schema-single-parameter-schema-get--payments:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            accountId:
              type: string
            customerId:
              type: string
            counterpartyAccountId:
              type: string
            status:
              items:
                enum:
                - Rejected
                - Pending
                - Canceled
                - Pending Review
                - Clearing
                - Sent
                - Returned
                type: string
              type: array
            type:
              items:
                enum:
                - AchPayment
                - BookPayment
                - WirePayment
                type: string
              type: array
            direction:
              items:
                enum:
                - Debit
                - Credit
                type: string
              type: array
            since:
              type: string
            until:
              type: string
            fromAmount:
              type: integer
            toAmount:
              type: integer
            recurringPaymentId:
              type: integer
            feature:
              items:
                enum:
                - SameDay
                - RecurringPayment
                type: string
              type: array
          type: object
        include:
          type: string
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - include
      - sort
    konfig-generated-schema-single-parameter-schema-post--payments:
      properties:
        data: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--payments-paymentId:
      properties:
        paymentId:
          type: string
        included:
          type: string
      required:
      - paymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - paymentId
      - included
    konfig-generated-schema-single-parameter-schema-patch--payments-paymentId:
      properties:
        paymentId:
          type: string
        data: {}
      required:
      - data
      - paymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - paymentId
    konfig-generated-schema-single-parameter-schema-post--payments-paymentId-cancel:
      properties:
        paymentId:
          type: string
      required:
      - paymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - paymentId
    konfig-generated-schema-single-parameter-schema-get--received-payments:
      properties:
        included:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - included
    konfig-generated-schema-single-parameter-schema-get--received-payments-paymentId:
      properties:
        paymentId:
          type: string
        included:
          type: string
      required:
      - paymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - paymentId
      - included
    konfig-generated-schema-single-parameter-schema-patch--received-payments-paymentId:
      properties:
        paymentId:
          type: string
        data: {}
      required:
      - data
      - paymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - paymentId
    konfig-generated-schema-single-parameter-schema-post--received-payments-paymentId-advance:
      properties:
        paymentId:
          type: string
      required:
      - paymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - paymentId
    konfig-generated-schema-single-parameter-schema-get--counterparties:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            customerId:
              type: string
            accountNumber:
              type: string
            routingNumber:
              type: string
            permissions:
              items:
                enum:
                - CreditOnly
                - DebitOnly
                - CreditAndDebit
                type: string
              type: array
          type: object
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
    konfig-generated-schema-single-parameter-schema-post--counterparties:
      properties:
        data: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--counterparties-counterpartyId:
      properties:
        counterpartyId:
          type: string
      required:
      - counterpartyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - counterpartyId
    konfig-generated-schema-single-parameter-schema-get--counterparties-counterpartyId:
      properties:
        counterpartyId:
          type: string
        included:
          type: string
      required:
      - counterpartyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - counterpartyId
      - included
    konfig-generated-schema-single-parameter-schema-patch--counterparties-counterpartyId:
      properties:
        counterpartyId:
          type: string
        data: {}
      required:
      - counterpartyId
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - counterpartyId
    konfig-generated-schema-single-parameter-schema-get--counterparties-counterpartyId-balance:
      properties:
        counterpartyId:
          type: string
      required:
      - counterpartyId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - counterpartyId
    konfig-generated-schema-single-parameter-schema-get--recurring-payments:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            accountId:
              type: string
            customerId:
              type: string
            status:
              items:
                type: string
              type: array
            type:
              items:
                enum:
                - recurringCreditAchPayment
                - recurringDebitAchPayment
                - recurringCreditBookPayment
                type: string
              type: array
            fromStartTime:
              type: string
            toStartTime:
              type: string
            fromEndTime:
              type: string
            toEndTime:
              type: string
          type: object
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
    konfig-generated-schema-single-parameter-schema-post--recurring-payments:
      properties:
        data: {}
      required:
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--recurring-payments-paymentId:
      properties:
        paymentId:
          type: string
      required:
      - paymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - paymentId
    konfig-generated-schema-single-parameter-schema-post--recurring-payments-paymentId-disable:
      properties:
        paymentId:
          type: string
      required:
      - paymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - paymentId
    konfig-generated-schema-single-parameter-schema-post--recurring-payments-paymentId-enable:
      properties:
        paymentId:
          type: string
      required:
      - paymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - paymentId
    konfig-generated-schema-single-parameter-schema-get--cards:
      properties:
        page:
          properties:
            limit:
              default: 100
              example: 100
              maximum: 1000
              type: integer
              x-konfig-original-example: 100
              x-konfig-generated-schema: konfig-generated-schema-paths--cards-get-parameters-0-schema-properties-limit
            offset:
              default: 0
              example: 0
              type: integer
              x-konfig-original-example: 0
              x-konfig-generated-schema: konfig-generated-schema-paths--cards-get-parameters-0-schema-properties-offset
          type: object
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            status:
              items:
                enum:
                - Inactive
                - Active
                - Stolen
                - Lost
                - Frozen
                - ClosedByCustomer
                - SuspectedFraud
                type: string
              type: array
            accountId:
              type: string
            customerId:
              type: string
          type: object
        include:
          type: string
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - include
      - sort
    konfig-generated-schema-single-parameter-schema-post--cards:
      properties:
        data: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--cards-cardId:
      properties:
        cardId:
          type: string
        included:
          type: string
      required:
      - cardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cardId
      - included
    konfig-generated-schema-single-parameter-schema-patch--cards-cardId:
      properties:
        cardId:
          type: string
        data: {}
      required:
      - cardId
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cardId
    konfig-generated-schema-single-parameter-schema-get--cards-cardId-secure-data-pin-status:
      properties:
        cardId:
          type: string
      required:
      - cardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cardId
    konfig-generated-schema-single-parameter-schema-post--cards-cardId-report-stolen:
      properties:
        cardId:
          type: string
      required:
      - cardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cardId
    konfig-generated-schema-single-parameter-schema-post--cards-cardId-report-lost:
      properties:
        cardId:
          type: string
      required:
      - cardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cardId
    konfig-generated-schema-single-parameter-schema-post--cards-cardId-close:
      properties:
        cardId:
          type: string
      required:
      - cardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cardId
    konfig-generated-schema-single-parameter-schema-post--cards-cardId-freeze:
      properties:
        cardId:
          type: string
      required:
      - cardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cardId
    konfig-generated-schema-single-parameter-schema-post--cards-cardId-unfreeze:
      properties:
        cardId:
          type: string
      required:
      - cardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cardId
    konfig-generated-schema-single-parameter-schema-get--cards-cardId-limits:
      properties:
        cardId:
          type: string
      required:
      - cardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cardId
    konfig-generated-schema-single-parameter-schema-get--authorizations:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            accountId:
              type: string
            accountType:
              type: string
            customerId:
              type: string
            cardId:
              type: string
            includeNonAuthorized:
              type: boolean
            merchantCategoryCode:
              items:
                type: string
              type: array
            since:
              type: string
            until:
              type: string
            fromAmount:
              type: integer
            toAmount:
              type: integer
            status:
              items:
                enum:
                - Authorized
                - Completed
                - Canceled
                - Declined
                type: string
              type: array
          type: object
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
    konfig-generated-schema-single-parameter-schema-get--authorizations-authorizationId:
      properties:
        authorizationId:
          type: string
        includeNoneAuthorized:
          type: boolean
      required:
      - authorizationId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authorizationId
      - includeNoneAuthorized
    konfig-generated-schema-single-parameter-schema-get--authorization-requests:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            accountId:
              type: string
            customerId:
              type: string
            merchantCategoryCode:
              items:
                type: string
              type: array
            fromAmount:
              type: integer
            toAmount:
              type: integer
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
    konfig-generated-schema-single-parameter-schema-get--authorization-requests-authorizationId:
      properties:
        authorizationId:
          type: string
      required:
      - authorizationId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authorizationId
    konfig-generated-schema-single-parameter-schema-post--authorization-requests-authorizationId-approve:
      properties:
        authorizationId:
          type: string
        data:
          $ref: '#/paths/~1authorization-requests~1%7BauthorizationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/definitions/approveAuthorizationRequest'
      required:
      - authorizationId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authorizationId
    konfig-generated-schema-single-parameter-schema-post--authorization-requests-authorizationId-decline:
      properties:
        authorizationId:
          type: string
        data:
          $ref: '#/paths/~1authorization-requests~1%7BauthorizationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/definitions/declineAuthorizationRequest'
      required:
      - authorizationId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - authorizationId
    konfig-generated-schema-single-parameter-schema-get--statements:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            accountId:
              type: string
            customerId:
              type: string
            period:
              type: string
          type: object
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
    konfig-generated-schema-single-parameter-schema-get--statements-statementId-html:
      properties:
        statementId:
          type: string
      required:
      - statementId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - statementId
    konfig-generated-schema-single-parameter-schema-get--statements-statementId-pdf:
      properties:
        statementId:
          type: string
      required:
      - statementId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - statementId
    konfig-generated-schema-single-parameter-schema-get--statements-accountId-bank-pdf:
      properties:
        accountId:
          type: string
      required:
      - accountId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
    konfig-generated-schema-single-parameter-schema-get--rewards:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            transactionId:
              type: string
            rewardedTransactionId:
              type: string
            receivingAccountId:
              type: string
            customerId:
              type: string
            cardId:
              type: string
            since:
              type: string
            until:
              type: string
            status:
              type: string
          type: object
        sort:
          type: string
        include:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
      - include
    konfig-generated-schema-single-parameter-schema-post--rewards:
      properties:
        data:
          properties:
            type:
              default: reward
              example: reward
              type: string
              x-konfig-original-example: reward
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateRewardViaApiRequest-properties-data-properties-type
            attributes:
              properties:
                tags:
                  $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
                description:
                  maxLength: 50
                  type: string
                amount:
                  minimum: 1
                  type: integer
                idempotencyKey:
                  maxLength: 255
                  minLength: 1
                  type: string
              required:
              - amount
              - description
              type: object
            relationships:
              $ref: '#/paths/~1rewards/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/createRewardRelationships'
          required:
          - attributes
          - relationships
          - type
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--rewards-rewardId:
      properties:
        rewardId:
          type: string
      required:
      - rewardId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - rewardId
    konfig-generated-schema-single-parameter-schema-get--events:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            since:
              type: string
            until:
              type: string
            type:
              items:
                type: string
              type: array
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
    konfig-generated-schema-single-parameter-schema-get--events-eventId:
      properties:
        eventId:
          type: string
      required:
      - eventId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - eventId
    konfig-generated-schema-single-parameter-schema-post--events-eventId:
      properties:
        eventId:
          type: string
      required:
      - eventId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - eventId
    konfig-generated-schema-single-parameter-schema-get--institutions-routingNumber:
      properties:
        routingNumber:
          type: string
      required:
      - routingNumber
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - routingNumber
    konfig-generated-schema-single-parameter-schema-post--fees:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--check-deposits:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            accountId:
              type: string
            customerId:
              type: string
            status:
              items:
                enum:
                - AwaitingImages
                - AwaitingFrontImage
                - AwaitingBackImage
                - Pending
                - PendingReview
                - Rejected
                - Clearing
                - Sent
                - Canceled
                - Returned
                - AwaitingCustomerConfirmation
                type: string
              type: array
          type: object
        sort:
          type: string
        include:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
      - include
    konfig-generated-schema-single-parameter-schema-post--check-deposits:
      properties:
        data:
          properties:
            type:
              default: checkDeposit
              enum:
              - checkDeposit
              example: checkDeposit
              type: string
              x-konfig-original-example: checkDeposit
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCheckDepositViaApiRequest-properties-data-properties-type
            attributes:
              properties:
                tags:
                  $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
                description:
                  maxLength: 50
                  minLength: 1
                  type: string
                amount:
                  minimum: 1
                  type: integer
                idempotencyKey:
                  maxLength: 255
                  minLength: 1
                  type: string
              required:
              - amount
              - description
              type: object
            relationships:
              $ref: '#/paths/~1check-deposits/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/createCheckDepositRelationships'
          required:
          - attributes
          - relationships
          - type
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--check-deposits-checkDepositId:
      properties:
        checkDepositId:
          type: string
      required:
      - checkDepositId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkDepositId
    konfig-generated-schema-single-parameter-schema-patch--check-deposits-checkDepositId:
      properties:
        checkDepositId:
          type: string
        data:
          $ref: '#/paths/~1check-deposits~1%7BcheckDepositId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/patchCheckDeposit'
      required:
      - checkDepositId
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkDepositId
    konfig-generated-schema-single-parameter-schema-post--check-deposits-checkDepositId-confirm:
      properties:
        checkDepositId:
          type: string
      required:
      - checkDepositId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkDepositId
    konfig-generated-schema-single-parameter-schema-get--check-deposits-checkDepositId-front:
      properties:
        checkDepositId:
          type: string
      required:
      - checkDepositId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkDepositId
    konfig-generated-schema-single-parameter-schema-get--check-deposits-checkDepositId-back:
      properties:
        checkDepositId:
          type: string
      required:
      - checkDepositId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkDepositId
    konfig-generated-schema-single-parameter-schema-get--users-userId-api-tokens:
      properties:
        userId:
          type: string
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-post--users-userId-api-tokens:
      properties:
        userId:
          type: string
        data:
          properties:
            type:
              default: apiToken
              example: apiToken
              type: string
              x-konfig-original-example: apiToken
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateOrgApiTokenViaApiRequest-properties-data-properties-type
            attributes:
              properties:
                description:
                  type: string
                scope:
                  type: string
                expiration:
                  format: date-time
                  type: string
                sourceIp:
                  type: string
                resources:
                  items:
                    properties:
                      type:
                        enum:
                        - card
                        - account
                        type: string
                      ids:
                        items:
                          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
                        type: array
                    type: object
                  minItems: 1
                  type: array
              required:
              - description
              - expiration
              type: object
          required:
          - attributes
          - type
          type: object
      required:
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
    konfig-generated-schema-single-parameter-schema-delete--users-userId-api-tokens-tokenId:
      properties:
        userId:
          type: string
        tokenId:
          type: string
      required:
      - tokenId
      - userId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - userId
      - tokenId
    konfig-generated-schema-single-parameter-schema-post--customers-customerId-token:
      properties:
        customerId:
          type: string
        data:
          properties:
            type:
              default: customerToken
              example: customerToken
              type: string
              x-konfig-original-example: customerToken
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCustomerTokenViaApiRequest-properties-data-properties-type
            attributes:
              properties:
                scope:
                  type: string
                verificationToken:
                  type: string
                jwtToken:
                  type: string
                expiresIn:
                  type: integer
                verificationCode:
                  type: string
                resources:
                  items:
                    properties:
                      type:
                        enum:
                        - card
                        - account
                        type: string
                      ids:
                        items:
                          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
                        type: array
                    type: object
                  minItems: 1
                  type: array
                upgradableScope:
                  type: string
              type: object
          type: object
      required:
      - customerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - customerId
    konfig-generated-schema-single-parameter-schema-post--customers-customerId-token-verification:
      properties:
        customerId:
          type: string
        data:
          properties:
            type:
              default: customerTokenVerification
              example: customerTokenVerification
              type: string
              x-konfig-original-example: customerTokenVerification
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCustomerTokenVerificationViaApiRequest-properties-data-properties-type
            attributes:
              properties:
                channel:
                  enum:
                  - sms
                  - call
                  type: string
                phone:
                  $ref: '#/paths/~1applications~1%7BapplicationId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/contact/properties/phone'
                appHash:
                  maxLength: 11
                  minLength: 11
                  type: string
                language:
                  enum:
                  - en
                  - af
                  - ar
                  - ca
                  - zh
                  - zh-CN
                  - zh-HK
                  - hr
                  - cs
                  - da
                  - nl
                  - en-GB
                  - et
                  - fi
                  - fr
                  - de
                  - el
                  - he
                  - hi
                  - hu
                  - id
                  - it
                  - ja
                  - kn
                  - ko
                  - ms
                  - mr
                  - nb
                  - pl
                  - pt-BR
                  - pt
                  - ro
                  - ru
                  - sk
                  - es
                  - sv
                  - tl
                  - te
                  - th
                  - tr
                  - vi
                  type: string
              required:
              - channel
              type: object
          required:
          - attributes
          - type
          type: object
      required:
      - customerId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - customerId
    konfig-generated-schema-single-parameter-schema-get--webhooks:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            since:
              type: string
            until:
              type: string
            fromId:
              type: integer
            toId:
              type: integer
          type: object
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
    konfig-generated-schema-single-parameter-schema-post--webhooks:
      properties:
        data:
          properties:
            type:
              default: webhook
              example: webhook
              type: string
              x-konfig-original-example: webhook
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateWebhookViaApiRequest-properties-data-properties-type
            attributes:
              properties:
                label:
                  type: string
                url:
                  type: string
                token:
                  type: string
                contentType:
                  enum:
                  - Json
                  - JsonAPI
                  type: string
                deliveryMode:
                  type: string
                includeResources:
                  type: boolean
                subscriptionType:
                  enum:
                  - All
                  - OnlyAuthorizationRequest
                  type: string
              required:
              - contentType
              - deliveryMode
              - label
              - token
              - url
              type: object
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--webhooks-webhookId:
      properties:
        webhookId:
          type: string
      required:
      - webhookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - webhookId
    konfig-generated-schema-single-parameter-schema-patch--webhooks-webhookId:
      properties:
        webhookId:
          type: string
        data:
          properties:
            type:
              type: string
            attributes:
              properties:
                tags:
                  type: object
              type: object
          type: object
      required:
      - webhookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - webhookId
    konfig-generated-schema-single-parameter-schema-post--webhooks-webhookId-enable:
      properties:
        webhookId:
          type: string
      required:
      - webhookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - webhookId
    konfig-generated-schema-single-parameter-schema-post--webhooks-webhookId-disable:
      properties:
        webhookId:
          type: string
      required:
      - webhookId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - webhookId
    konfig-generated-schema-single-parameter-schema-get--atm-locations:
      properties:
        filter:
          properties:
            coordinates:
              type: object
            searchRadius:
              type: integer
            postalCode:
              type: string
            address:
              type: object
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - filter
    konfig-generated-schema-single-parameter-schema-get--accounts-accountId-transactions-transactionId:
      properties:
        accountId:
          type: string
        transactionId:
          type: string
      required:
      - accountId
      - transactionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
      - transactionId
    konfig-generated-schema-single-parameter-schema-patch--accounts-accountId-transactions-transactionId:
      properties:
        accountId:
          type: string
        transactionId:
          type: string
        data: {}
      required:
      - accountId
      - data
      - transactionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - accountId
      - transactionId
    konfig-generated-schema-single-parameter-schema-get--transactions:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            accountId:
              type: string
            customerId:
              type: string
            query:
              type: string
            since:
              type: string
            until:
              type: string
            cardId:
              type: string
            excludeFees:
              type: boolean
            type:
              items:
                type: string
              type: array
            direction:
              items:
                enum:
                - Debit
                - Credit
                type: string
              type: array
            fromAmount:
              type: integer
            toAmount:
              type: integer
            accountType:
              type: string
          type: object
        sort:
          type: string
        include:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
      - include
    konfig-generated-schema-single-parameter-schema-get--disputes:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            query:
              type: string
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
    konfig-generated-schema-single-parameter-schema-get--disputes-disputeId:
      properties:
        disputeId:
          type: string
      required:
      - disputeId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - disputeId
    konfig-generated-schema-single-parameter-schema-get--repayments:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            accountId:
              type: string
            creditAccountId:
              type: string
            customerId:
              type: string
            status:
              items:
                enum:
                - Pending
                - PendingReview
                - Returned
                - Sent
                - Rejected
                type: string
              type: array
            type:
              items:
                enum:
                - AchRepayment
                - BookRepayment
                type: string
              type: array
          type: object
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
    konfig-generated-schema-single-parameter-schema-post--repayments:
      properties:
        data: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--repayments-repaymentId:
      properties:
        repaymentId:
          type: string
        include:
          type: string
      required:
      - repaymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - repaymentId
      - include
    konfig-generated-schema-single-parameter-schema-get--check-payments:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            accountId:
              type: string
            customerId:
              type: string
            status:
              items:
                enum:
                - New
                - Pending
                - Canceled
                - Rejected
                - InDelivery
                - InProduction
                - Delivered
                - ReturnedToSender
                - Processed
                - PendingReview
                - MarkedForReturn
                - Returned
                type: string
              type: array
            since:
              type: string
            until:
              type: string
            fromAmount:
              type: integer
            toAmount:
              type: integer
            checkNumber:
              type: string
          type: object
        sort:
          type: string
        include:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
      - include
    konfig-generated-schema-single-parameter-schema-post--check-payments:
      properties:
        data:
          $ref: '#/paths/~1check-payments/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/checkPayment'
      required:
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--check-payments-checkPaymentId:
      properties:
        checkPaymentId:
          type: string
      required:
      - checkPaymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkPaymentId
    konfig-generated-schema-single-parameter-schema-post--check-payments-checkPaymentId-approve:
      properties:
        checkPaymentId:
          type: string
        data:
          properties:
            type:
              default: additionalVerification
              example: additionalVerification
              type: string
              x-konfig-original-example: additionalVerification
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApproveCheckPaymentByIdRequest-properties-data-properties-type
          type: object
      required:
      - checkPaymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkPaymentId
    konfig-generated-schema-single-parameter-schema-post--check-payments-checkPaymentId-cancel:
      properties:
        checkPaymentId:
          type: string
      required:
      - checkPaymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkPaymentId
    konfig-generated-schema-single-parameter-schema-post--check-payments-checkPaymentId-return:
      properties:
        checkPaymentId:
          type: string
        data:
          properties:
            type:
              default: checkPaymentReturn
              example: checkPaymentReturn
              type: string
              x-konfig-original-example: checkPaymentReturn
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReturnCheckPaymentByIdRequest-properties-data-properties-type
            attributes:
              properties:
                reason:
                  enum:
                  - InsufficientFunds
                  - AccountClosed
                  - AlteredCheck
                  - ForgedSignature
                  - PostdatedCheck
                  - StopPaymentOrder
                  - UnauthorizedDebit
                  - WrongAmount
                  - DuplicatePayment
                  - MissingSignature
                  - IrregularEndorsement
                  - Other
                  type: string
              type: object
          type: object
      required:
      - checkPaymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkPaymentId
    konfig-generated-schema-single-parameter-schema-get--check-payments-checkPaymentId-front:
      properties:
        checkPaymentId:
          type: string
      required:
      - checkPaymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkPaymentId
    konfig-generated-schema-single-parameter-schema-get--check-payments-checkPaymentId-back:
      properties:
        checkPaymentId:
          type: string
      required:
      - checkPaymentId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - checkPaymentId
    konfig-generated-schema-single-parameter-schema-get--stop-payments:
      properties:
        page:
          $ref: '#/paths/~1cards/get/parameters/0/schema'
        filter:
          properties:
            tags:
              additionalProperties:
                type: string
              type: object
            accountId:
              type: string
            customerId:
              type: string
            status:
              items:
                enum:
                - Active
                - Disabled
                type: string
              type: array
            since:
              type: string
            until:
              type: string
            fromAmount:
              type: integer
            toAmount:
              type: integer
            checkNumber:
              type: string
          type: object
        sort:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - page
      - filter
      - sort
    konfig-generated-schema-single-parameter-schema-post--stop-payments:
      properties:
        data:
          $ref: '#/paths/~1stop-payments/post/requestBody/content/application~1json/schema/definitions/stopPayment'
      required:
      - data
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--stop-payments-stop_payment_id:
      properties:
        stop_payment_id:
          type: string
      required:
      - stop_payment_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - stop_payment_id
    konfig-generated-schema-single-parameter-schema-get--stop-payments-stop_payment_id:
      properties:
        stop_payment_id:
          type: string
      required:
      - stop_payment_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - stop_payment_id
    konfig-generated-schema-single-parameter-schema-post--stop-payments-stop_payment_id-disable:
      properties:
        stop_payment_id:
          type: string
      required:
      - stop_payment_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - stop_payment_id
    ContactNullable:
      nullable: true
      properties:
        fullName:
          $ref: '#/paths/~1applications~1%7BapplicationId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/contact/properties/fullName'
        email:
          $ref: '#/paths/~1applications/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/createOfficer/properties/email'
        phone:
          $ref: '#/paths/~1applications~1%7BapplicationId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/contact/properties/phone'
        jwtSubject:
          $ref: '#/paths/~1applications/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/createPowerOfAttorneyAgent/properties/jwtSubject'
      title: Contact
      type: object
    GetListApplications_fromApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        query:
          type: string
        status:
          items:
            enum:
            - AwaitingDocuments
            - PendingReview
            - Pending
            - Approved
            - Denied
            - Canceled
            type: string
          type: array
        email:
          type: string
      type: object
    GetListApplicationForms_viaApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        query:
          type: string
        status:
          items:
            enum:
            - Pending
            - Approved
            type: string
          type: array
        email:
          type: string
      type: object
    GetListAccounts_fromApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        customerId:
          type: string
        status:
          items:
            enum:
            - Open
            - Frozen
            - Closed
            type: string
          type: array
        type:
          items:
            enum:
            - deposit
            - credit
            type: string
          type: array
        fromBalance:
          type: number
        toBalance:
          type: number
      type: object
    GetListCustomers_apiList_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        query:
          type: string
        status:
          items:
            enum:
            - Active
            - Archived
            type: string
          type: array
        email:
          type: string
      type: object
    GetListPayments_fromApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        accountId:
          type: string
        customerId:
          type: string
        counterpartyAccountId:
          type: string
        status:
          items:
            enum:
            - Rejected
            - Pending
            - Canceled
            - Pending Review
            - Clearing
            - Sent
            - Returned
            type: string
          type: array
        type:
          items:
            enum:
            - AchPayment
            - BookPayment
            - WirePayment
            type: string
          type: array
        direction:
          items:
            enum:
            - Debit
            - Credit
            type: string
          type: array
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        recurringPaymentId:
          type: integer
        feature:
          items:
            enum:
            - SameDay
            - RecurringPayment
            type: string
          type: array
      type: object
    GetListCounterparties_fromApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        customerId:
          type: string
        accountNumber:
          type: string
        routingNumber:
          type: string
        permissions:
          items:
            enum:
            - CreditOnly
            - DebitOnly
            - CreditAndDebit
            type: string
          type: array
      type: object
    GetListRecurringPayments_fromApi_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            type: string
          type: array
        type:
          items:
            enum:
            - recurringCreditAchPayment
            - recurringDebitAchPayment
            - recurringCreditBookPayment
            type: string
          type: array
        fromStartTime:
          type: string
        toStartTime:
          type: string
        fromEndTime:
          type: string
        toEndTime:
          type: string
      type: object
    GetListOfCards_fromApi_page_parameter:
      properties:
        limit:
          default: 100
          example: 100
          maximum: 1000
          type: integer
          x-konfig-original-example: 100
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-get-parameters-0-schema-properties-limit
        offset:
          default: 0
          example: 0
          type: integer
          x-konfig-original-example: 0
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-get-parameters-0-schema-properties-offset
      type: object
    GetListOfCards_fromApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        status:
          items:
            enum:
            - Inactive
            - Active
            - Stolen
            - Lost
            - Frozen
            - ClosedByCustomer
            - SuspectedFraud
            type: string
          type: array
        accountId:
          type: string
        customerId:
          type: string
      type: object
    GetListAuthorizations_fromApi_filter_parameter:
      properties:
        accountId:
          type: string
        accountType:
          type: string
        customerId:
          type: string
        cardId:
          type: string
        includeNonAuthorized:
          type: boolean
        merchantCategoryCode:
          items:
            type: string
          type: array
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        status:
          items:
            enum:
            - Authorized
            - Completed
            - Canceled
            - Declined
            type: string
          type: array
      type: object
    GetListAuthorizationRequests_fromApi_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        merchantCategoryCode:
          items:
            type: string
          type: array
        fromAmount:
          type: integer
        toAmount:
          type: integer
      type: object
    GetListStatements_fromApi_filter_parameter:
      properties:
        accountId:
          type: string
        customerId:
          type: string
        period:
          type: string
      type: object
    GetListRewards_fromApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        transactionId:
          type: string
        rewardedTransactionId:
          type: string
        receivingAccountId:
          type: string
        customerId:
          type: string
        cardId:
          type: string
        since:
          type: string
        until:
          type: string
        status:
          type: string
      type: object
    GetListEvents_fromApi_filter_parameter:
      properties:
        since:
          type: string
        until:
          type: string
        type:
          items:
            type: string
          type: array
      type: object
    GetListCheckDeposits_fromApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - AwaitingImages
            - AwaitingFrontImage
            - AwaitingBackImage
            - Pending
            - PendingReview
            - Rejected
            - Clearing
            - Sent
            - Canceled
            - Returned
            - AwaitingCustomerConfirmation
            type: string
          type: array
      type: object
    GetListWebhooks_fromApi_filter_parameter:
      properties:
        since:
          type: string
        until:
          type: string
        fromId:
          type: integer
        toId:
          type: integer
      type: object
    GetAtmLocationsList_fromApi_filter_parameter:
      properties:
        coordinates:
          type: object
        searchRadius:
          type: integer
        postalCode:
          type: string
        address:
          type: object
      type: object
    GetListTransactions_fromApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        accountId:
          type: string
        customerId:
          type: string
        query:
          type: string
        since:
          type: string
        until:
          type: string
        cardId:
          type: string
        excludeFees:
          type: boolean
        type:
          items:
            type: string
          type: array
        direction:
          items:
            enum:
            - Debit
            - Credit
            type: string
          type: array
        fromAmount:
          type: integer
        toAmount:
          type: integer
        accountType:
          type: string
      type: object
    GetListDisputes_fromApi_filter_parameter:
      properties:
        query:
          type: string
      type: object
    GetListRepayments_fromApi_filter_parameter:
      properties:
        accountId:
          type: string
        creditAccountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - Pending
            - PendingReview
            - Returned
            - Sent
            - Rejected
            type: string
          type: array
        type:
          items:
            enum:
            - AchRepayment
            - BookRepayment
            type: string
          type: array
      type: object
    GetListCheckPayments_fromApi_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - New
            - Pending
            - Canceled
            - Rejected
            - InDelivery
            - InProduction
            - Delivered
            - ReturnedToSender
            - Processed
            - PendingReview
            - MarkedForReturn
            - Returned
            type: string
          type: array
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        checkNumber:
          type: string
      type: object
    StopPayment_getList_filter_parameter:
      properties:
        tags:
          additionalProperties:
            type: string
          type: object
        accountId:
          type: string
        customerId:
          type: string
        status:
          items:
            enum:
            - Active
            - Disabled
            type: string
          type: array
        since:
          type: string
        until:
          type: string
        fromAmount:
          type: integer
        toAmount:
          type: integer
        checkNumber:
          type: string
      type: object
    CancelApplicationByIdRequest_data_attributes:
      properties:
        reason:
          type: string
      type: object
    CancelApplicationByIdRequest_data:
      properties:
        type:
          enum:
          - cancelApplication
          type: string
        attributes:
          $ref: '#/components/schemas/CancelApplicationByIdRequest_data_attributes'
      type: object
    CreateApplicationFormViaApiRequest_data_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        applicantDetails:
          $ref: '#/paths/~1application-forms/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/ApplicationFormPrefill'
        settingsOverride:
          $ref: '#/paths/~1application-forms/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/ApplicationFormSettingsOverride'
        requireIdVerification:
          $ref: '#/paths/~1application-forms/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/requireIdVerification'
        allowedApplicationTypes:
          items:
            enum:
            - Individual
            - Business
            - SoleProprietorship
            type: string
          type: array
        lang:
          enum:
          - en
          - es
          type: string
        hideApplicationProgressTracker:
          type: boolean
      type: object
    createApplicationFormRelationships_Property:
      properties:
        application:
          $ref: '#/paths/~1check-deposits/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/createCheckDepositRelationships/properties/account'
      title: createApplicationFormRelationships
      type: object
    CreateApplicationFormViaApiRequest_data:
      properties:
        type:
          default: applicationForm
          example: applicationForm
          type: string
          x-konfig-original-example: applicationForm
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateApplicationFormViaApiRequest-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/CreateApplicationFormViaApiRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/createApplicationFormRelationships_Property'
      required:
      - type
      type: object
    FreezeAnAccountByIdRequest_data_attributes:
      properties:
        reason:
          enum:
          - Fraud
          - Other
          type: string
        reasonText:
          nullable: true
          type: string
      type: object
    FreezeAnAccountByIdRequest_data:
      properties:
        type:
          enum:
          - creditAccountFreeze
          - accountFreeze
          type: string
        attributes:
          $ref: '#/components/schemas/FreezeAnAccountByIdRequest_data_attributes'
      type: object
    CloseAccountRequest_Property_attributes:
      properties:
        reason:
          default: ByCustomer
          enum:
          - ByCustomer
          - Fraud
          example: ByCustomer
          type: string
          x-konfig-original-example: ByCustomer
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CloseAnAccountByIdRequest-properties-data-properties-attributes-properties-reason
        fraudReason:
          enum:
          - ACHActivity
          - CardActivity
          - CheckActivity
          - ApplicationHistory
          - AccountActivity
          - ClientIdentified
          - IdentityTheft
          - LinkedToFraudulentCustomer
          nullable: true
          type: string
      type: object
    CloseAccountRequest_Property:
      properties:
        type:
          enum:
          - creditAccountClose
          - depositAccountClose
          type: string
        attributes:
          $ref: '#/components/schemas/CloseAccountRequest_Property_attributes'
      title: CloseAccountRequest
      type: object
    ArchiveCustomerByIdRequest_attributes:
      properties:
        reason:
          enum:
          - Inactive
          - FraudACHActivity
          - FraudCardActivity
          - FraudCheckActivity
          - FraudApplicationHistory
          - FraudAccountActivity
          - FraudClientIdentified
          - FraudLinkedToFraudulentCustomer
          type: string
      type: object
    CreateRewardViaApiRequest_data_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        description:
          maxLength: 50
          type: string
        amount:
          minimum: 1
          type: integer
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - amount
      - description
      type: object
    CreateRewardViaApiRequest_data:
      properties:
        type:
          default: reward
          example: reward
          type: string
          x-konfig-original-example: reward
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateRewardViaApiRequest-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/CreateRewardViaApiRequest_data_attributes'
        relationships:
          $ref: '#/paths/~1rewards/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/createRewardRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    CreateCheckDepositViaApiRequest_data_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        description:
          maxLength: 50
          minLength: 1
          type: string
        amount:
          minimum: 1
          type: integer
        idempotencyKey:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - amount
      - description
      type: object
    CreateCheckDepositViaApiRequest_data:
      properties:
        type:
          default: checkDeposit
          enum:
          - checkDeposit
          example: checkDeposit
          type: string
          x-konfig-original-example: checkDeposit
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCheckDepositViaApiRequest-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/CreateCheckDepositViaApiRequest_data_attributes'
        relationships:
          $ref: '#/paths/~1check-deposits/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/createCheckDepositRelationships'
      required:
      - attributes
      - relationships
      - type
      type: object
    CreateOrgApiTokenViaApiRequest_data_attributes_resources_inner:
      properties:
        type:
          enum:
          - card
          - account
          type: string
        ids:
          items:
            $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
          type: array
      type: object
    CreateOrgApiTokenViaApiRequest_data_attributes:
      properties:
        description:
          type: string
        scope:
          type: string
        expiration:
          format: date-time
          type: string
        sourceIp:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/CreateOrgApiTokenViaApiRequest_data_attributes_resources_inner'
          minItems: 1
          type: array
      required:
      - description
      - expiration
      type: object
    CreateOrgApiTokenViaApiRequest_data:
      properties:
        type:
          default: apiToken
          example: apiToken
          type: string
          x-konfig-original-example: apiToken
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateOrgApiTokenViaApiRequest-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/CreateOrgApiTokenViaApiRequest_data_attributes'
      required:
      - attributes
      - type
      type: object
    CreateCustomerTokenViaApiRequest_data_attributes:
      properties:
        scope:
          type: string
        verificationToken:
          type: string
        jwtToken:
          type: string
        expiresIn:
          type: integer
        verificationCode:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/CreateOrgApiTokenViaApiRequest_data_attributes_resources_inner'
          minItems: 1
          type: array
        upgradableScope:
          type: string
      type: object
    CreateCustomerTokenViaApiRequest_data:
      properties:
        type:
          default: customerToken
          example: customerToken
          type: string
          x-konfig-original-example: customerToken
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCustomerTokenViaApiRequest-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/CreateCustomerTokenViaApiRequest_data_attributes'
      type: object
    CreateCustomerTokenVerificationViaApiRequest_data_attributes:
      properties:
        channel:
          enum:
          - sms
          - call
          type: string
        phone:
          $ref: '#/paths/~1applications~1%7BapplicationId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/contact/properties/phone'
        appHash:
          maxLength: 11
          minLength: 11
          type: string
        language:
          enum:
          - en
          - af
          - ar
          - ca
          - zh
          - zh-CN
          - zh-HK
          - hr
          - cs
          - da
          - nl
          - en-GB
          - et
          - fi
          - fr
          - de
          - el
          - he
          - hi
          - hu
          - id
          - it
          - ja
          - kn
          - ko
          - ms
          - mr
          - nb
          - pl
          - pt-BR
          - pt
          - ro
          - ru
          - sk
          - es
          - sv
          - tl
          - te
          - th
          - tr
          - vi
          type: string
      required:
      - channel
      type: object
    CreateCustomerTokenVerificationViaApiRequest_data:
      properties:
        type:
          default: customerTokenVerification
          example: customerTokenVerification
          type: string
          x-konfig-original-example: customerTokenVerification
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCustomerTokenVerificationViaApiRequest-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/CreateCustomerTokenVerificationViaApiRequest_data_attributes'
      required:
      - attributes
      - type
      type: object
    CreateWebhookViaApiRequest_data_attributes:
      properties:
        label:
          type: string
        url:
          type: string
        token:
          type: string
        contentType:
          enum:
          - Json
          - JsonAPI
          type: string
        deliveryMode:
          type: string
        includeResources:
          type: boolean
        subscriptionType:
          enum:
          - All
          - OnlyAuthorizationRequest
          type: string
      required:
      - contentType
      - deliveryMode
      - label
      - token
      - url
      type: object
    CreateWebhookViaApiRequest_data:
      properties:
        type:
          default: webhook
          example: webhook
          type: string
          x-konfig-original-example: webhook
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateWebhookViaApiRequest-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/CreateWebhookViaApiRequest_data_attributes'
      type: object
    UpdateWebhookViaApiRequest_data_attributes:
      properties:
        tags:
          type: object
      type: object
    UpdateWebhookViaApiRequest_data:
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateWebhookViaApiRequest_data_attributes'
      type: object
    ApproveCheckPaymentByIdRequest_data:
      properties:
        type:
          default: additionalVerification
          example: additionalVerification
          type: string
          x-konfig-original-example: additionalVerification
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ApproveCheckPaymentByIdRequest-properties-data-properties-type
      type: object
    ReturnCheckPaymentByIdRequest_data_attributes:
      properties:
        reason:
          enum:
          - InsufficientFunds
          - AccountClosed
          - AlteredCheck
          - ForgedSignature
          - PostdatedCheck
          - StopPaymentOrder
          - UnauthorizedDebit
          - WrongAmount
          - DuplicatePayment
          - MissingSignature
          - IrregularEndorsement
          - Other
          type: string
      type: object
    ReturnCheckPaymentByIdRequest_data:
      properties:
        type:
          default: checkPaymentReturn
          example: checkPaymentReturn
          type: string
          x-konfig-original-example: checkPaymentReturn
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-ReturnCheckPaymentByIdRequest-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/ReturnCheckPaymentByIdRequest_data_attributes'
      type: object
    GetListApplicationsFromApi200Response_meta_pagination:
      example:
        total: 1
        offset: 6
        limit: 0
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      type: object
    GetListApplicationsFromApi200Response_meta:
      example:
        pagination:
          total: 1
          offset: 6
          limit: 0
      properties:
        pagination:
          $ref: '#/components/schemas/GetListApplicationsFromApi200Response_meta_pagination'
      type: object
    Application_Property:
      discriminator:
        mapping:
          individualApplication: '#/definitions/IndividualApplication'
          businessApplication: '#/definitions/BusinessApplication'
          trustApplication: '#/definitions/TrustApplication'
        propertyName: type
      properties:
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        type:
          type: string
      title: Application
      type: object
    Application_Document_Document_attributes:
      properties:
        description:
          type: string
        documentType:
          type: string
        status:
          type: string
        nationality:
          $ref: '#/paths/~1applications~1%7BapplicationId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/grantor/properties/nationality'
        ssn:
          pattern: "^\\d{9}$"
          type: string
        passport:
          type: string
        matriculaConsular:
          type: string
        name:
          type: string
        address:
          $ref: '#/paths/~1applications~1%7BapplicationId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/grantor/properties/address'
        dateOfIncorporation:
          format: date
          type: string
        stateOfIncorporation:
          type: string
        dateOfBirth:
          format: date
          type: string
        ein:
          pattern: "^\\d{9}$"
          type: string
        reasonCode:
          type: string
        reason:
          type: string
        evaluationId:
          type: string
        frontDocumentId:
          type: string
        backDocumentId:
          type: string
        frontDocumentStoreId:
          type: string
        backDocumentStoreId:
          type: string
      required:
      - status
      type: object
    Application_Document_Document:
      properties:
        type:
          default: document
          example: document
          type: string
          x-konfig-original-example: document
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateApplicationViaApiResponse-properties-included-items-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Application_Document_Document_attributes'
      required:
      - attributes
      - id
      - type
      title: Application Document Document
      type: object
    Application_Form_Property_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        email:
          $ref: '#/paths/~1applications/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/createOfficer/properties/email'
        url:
          type: string
        stage:
          enum:
          - ChooseBusinessOrIndividual
          - EnterIndividualInformation
          - IndividualPhoneVerification
          - IndividualApplicationCreated
          - EnterBusinessInformation
          - EnterBusinessAdditionalInformation
          - EnterOfficerInformation
          - BusinessPhoneVerification
          - EnterBeneficialOwnersInformation
          - BusinessApplicationCreated
          - EnterSoleProprietorshipInformation
          - EnterSoleProprietorshipBusinessInformation
          - SoleProprietorshipPhoneVerification
          - SoleProprietorshipApplicationCreated
          type: string
        applicantDetails:
          $ref: '#/paths/~1application-forms/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/ApplicationFormPrefill'
        settingsOverride:
          $ref: '#/paths/~1application-forms/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/ApplicationFormSettingsOverride'
        allowedApplicationTypes:
          items:
            enum:
            - Individual
            - Business
            - SoleProprietorship
            type: string
          type: array
      required:
      - url
      type: object
    Application_Form_Property:
      properties:
        type:
          default: applicationForm
          example: applicationForm
          type: string
          x-konfig-original-example: applicationForm
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateApplicationFormViaApiResponse-properties-data-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Application_Form_Property_attributes'
        relationships:
          $ref: '#/paths/~1application-forms/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/applicationFormRelationships'
      required:
      - attributes
      - id
      - type
      title: Application Form
      type: object
    Account_Document:
      discriminator:
        mapping:
          depositAccount: '#/definitions/DepositAccount'
          creditAccount: '#/definitions/CreditAccount'
        propertyName: type
      properties:
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        type:
          type: string
      title: Account Document
      type: object
    GetAccountLimitsByIdResponse_data_attributes_card_limits:
      properties:
        dailyWithdrawal:
          type: number
        dailyDeposit:
          type: number
        dailyPurchase:
          type: number
        dailyCardTransaction:
          type: number
      type: object
    GetAccountLimitsByIdResponse_data_attributes_card_totalsDaily:
      properties:
        withdrawal:
          type: number
        deposit:
          type: number
        purchase:
          type: number
        cardTransaction:
          type: number
      type: object
    GetAccountLimitsByIdResponse_data_attributes_card:
      properties:
        limits:
          $ref: '#/components/schemas/GetAccountLimitsByIdResponse_data_attributes_card_limits'
        totalsDaily:
          $ref: '#/components/schemas/GetAccountLimitsByIdResponse_data_attributes_card_totalsDaily'
      type: object
    GetAccountLimitsByIdResponse_data_attributes:
      properties:
        card:
          $ref: '#/components/schemas/GetAccountLimitsByIdResponse_data_attributes_card'
      type: object
    GetAccountLimitsByIdResponse_data:
      properties:
        type:
          type: string
        id:
          type: string
        attributes:
          $ref: '#/components/schemas/GetAccountLimitsByIdResponse_data_attributes'
      type: object
    Account_End_Of_Day_Resource_Property_attributes:
      properties:
        date:
          format: date
          type: string
        balance:
          type: integer
        hold:
          type: integer
        available:
          type: integer
        overdraftLimit:
          type: integer
      required:
      - available
      - balance
      - date
      - hold
      type: object
    Account_End_Of_Day_Resource_Property:
      properties:
        type:
          enum:
          - accountEndOfDay
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Account_End_Of_Day_Resource_Property_attributes'
        relationships:
          $ref: '#/paths/~1account-end-of-day/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/definitions/relationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Account End Of Day Resource
      type: object
    Customer:
      discriminator:
        mapping:
          individualCustomer: '#/definitions/IndividualCustomer'
          businessCustomer: '#/definitions/BusinessCustomer'
          trustCustomer: '#/definitions/TrustCustomer'
        propertyName: type
      properties:
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        type:
          type: string
      title: Customer
      type: object
    Payment_Resource_Property:
      discriminator:
        mapping:
          achPayment: '#/definitions/AchPayment'
          bookPayment: '#/definitions/BookPayment'
          wirePayment: '#/definitions/WirePayment'
          billPayment: '#/definitions/BillPayment'
        propertyName: type
      properties:
        type:
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
      title: Payment Resource
      type: object
    Received_Payment_Resource_Property_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        description:
          type: string
        createdAt:
          format: date-time
          type: string
        status:
          enum:
          - Pending
          - Advanced
          - Completed
          - Returned
          type: string
        amount:
          minimum: 1
          type: integer
        completionDate:
          type: string
        direction:
          enum:
          - Debit
          - Credit
          type: string
        wasAdvanced:
          type: boolean
        isAdvanceable:
          type: boolean
        isAdvaceable:
          type: boolean
        companyName:
          type: string
        counterpartyRoutingNumber:
          type: string
        addenda:
          type: string
        traceNumber:
          type: string
        secCode:
          maxLength: 3
          minLength: 3
          type: string
        returnReason:
          type: string
        receivingEntityName:
          type: string
      required:
      - amount
      - companyName
      - completionDate
      - counterpartyRoutingNumber
      - createdAt
      - description
      - direction
      - secCode
      - status
      - traceNumber
      - wasAdvanced
      type: object
    Received_Payment_Resource_Property:
      properties:
        type:
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Received_Payment_Resource_Property_attributes'
        relationships:
          $ref: '#/paths/~1received-payments~1%7BpaymentId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/definitions/receivedPaymentRelationships'
      title: Received Payment Resource
      type: object
    Counterparty_Document_Property_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        routingNumber:
          pattern: "^\\d{9}$"
          type: string
        accountNumber:
          pattern: "^\\d{1,17}$"
          type: string
        accountType:
          enum:
          - Checking
          - Savings
          - Loan
          type: string
        type:
          enum:
          - Business
          - Person
          - Unknown
          type: string
        name:
          maxLength: 50
          minLength: 1
          type: string
        bank:
          type: string
        permissions:
          enum:
          - CreditOnly
          - DebitOnly
          - CreditAndDebit
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - accountNumber
      - accountType
      - createdAt
      - name
      - permissions
      - routingNumber
      - type
      type: object
    Counterparty_Document_Property:
      properties:
        type:
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Counterparty_Document_Property_attributes'
        relationships:
          $ref: '#/paths/~1counterparties/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/counterpartyRelationships'
      title: Counterparty Document
      type: object
    Counterparty_Balance_Property_attributes:
      properties:
        balance:
          type: number
        available:
          type: number
      required:
      - balance
      type: object
    Counterparty_Balance_Property:
      properties:
        type:
          default: counterpartyBalance
          example: counterpartyBalance
          type: string
          x-konfig-original-example: counterpartyBalance
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GetCounterpartyBalanceRecurringPaymentFromApiResponse-properties-data-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Counterparty_Balance_Property_attributes'
        relationships:
          $ref: '#/paths/~1counterparties~1%7BcounterpartyId%7D~1balance/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/definitions/counterpartyBalanceRelationships'
      required:
      - id
      - relationships
      - type
      title: Counterparty Balance
      type: object
    Recurring_Payment_Resource:
      discriminator:
        mapping:
          recurringCreditAchPayment: '#/definitions/RecurringCreditAchPayment'
          recurringDebitAchPayment: '#/definitions/RecurringDebitAchPayment'
          recurringCreditBookPayment: '#/definitions/RecurringCreditBookPayment'
        propertyName: type
      properties:
        type:
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
      title: Recurring Payment Resource
      type: object
    Card_Document_Property:
      discriminator:
        mapping:
          businessDebitCard: '#/definitions/BusinessDebitCard'
          individualDebitCard: '#/definitions/IndividualDebitCard'
          businessVirtualDebitCard: '#/definitions/BusinessVirtualDebitCard'
          individualVirtualDebitCard: '#/definitions/IndividualVirtualDebitCard'
          businessCreditCard: '#/definitions/BusinessCreditCard'
          businessVirtualCreditCard: '#/definitions/BusinessVirtualCreditCard'
        propertyName: type
      properties:
        type:
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
      title: Card Document
      type: object
    Account_Limits_Resource_Property:
      discriminator:
        mapping:
          limits: '#/definitions/DepositLimits'
          creditLimits: '#/definitions/CreditLimits'
        propertyName: type
      properties:
        type:
          type: string
      title: Account Limits Resource
      type: object
    Merchant_Property:
      properties:
        name:
          type: string
        type:
          type: integer
        category:
          type: string
        location:
          type: string
        id:
          type: string
      required:
      - category
      - name
      - type
      title: Merchant
      type: object
    Card_Verification_Data_Property:
      properties:
        verificationMethod:
          type: string
      required:
      - verificationMethod
      title: Card Verification Data
      type: object
    Authorization_Document_Property_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        summary:
          type: string
        createdAt:
          format: date-time
          type: string
        amount:
          type: integer
        cardLast4Digits:
          type: string
        merchant:
          $ref: '#/components/schemas/Merchant_Property'
        recurring:
          type: boolean
        status:
          type: string
        declineReason:
          type: string
        paymentMethod:
          type: string
        digitalWallet:
          type: string
        cardVerificationData:
          $ref: '#/components/schemas/Card_Verification_Data_Property'
        cardNetwork:
          type: string
        cashWithdrawalAmount:
          type: integer
      required:
      - amount
      - cardLast4Digits
      - createdAt
      - merchant
      - recurring
      - status
      type: object
    Authorization_Document_Property:
      properties:
        type:
          default: authorization
          example: authorization
          type: string
          x-konfig-original-example: authorization
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GetAuthorizationByIdResponse-properties-data-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Authorization_Document_Property_attributes'
        relationships:
          $ref: '#/paths/~1authorizations~1%7BauthorizationId%7D/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/definitions/authorizationRelationships'
      required:
      - id
      - relationships
      - type
      title: Authorization Document
      type: object
    AuthorizationRequest_Document_Property:
      discriminator:
        mapping:
          purchaseAuthorizationRequest: '#/definitions/PurchaseAuthorizationRequest'
          cardTransactionAuthorizationRequest: '#/definitions/CardTransactionAuthorizationRequest'
          atmAuthorizationRequest: '#/definitions/AtmAuthorizationRequest'
        propertyName: type
      properties:
        type:
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
      title: AuthorizationRequest Document
      type: object
    Statement_attributes:
      properties:
        period:
          type: string
      type: object
    Statement:
      properties:
        type:
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Statement_attributes'
        relationships:
          $ref: '#/paths/~1statements/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/properties/data/items/definitions/statementRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Statement
      type: object
    Reward_Property_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        description:
          maxLength: 50
          type: string
        createdAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        status:
          enum:
          - Rejected
          - Sent
          type: string
        rejectReason:
          type: string
      required:
      - amount
      - createdAt
      - description
      - status
      - tags
      type: object
    Reward_Property:
      properties:
        type:
          default: reward
          example: reward
          type: string
          x-konfig-original-example: reward
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateRewardViaApiResponse-properties-data-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Reward_Property_attributes'
        relationships:
          $ref: '#/paths/~1rewards/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/rewardRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Reward
      type: object
    Event_Resource_Property:
      properties:
        type:
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          properties: {}
          type: object
        relationships:
          properties: {}
          title: eventRelationships
          type: object
      required:
      - id
      - type
      title: Event Resource
      type: object
    Institution_Resource_Property_attributes:
      properties:
        routingNumber:
          type: string
        name:
          type: string
        address:
          type: string
        isWireSupported:
          type: boolean
        isACHSupported:
          type: boolean
      required:
      - isACHSupported
      - isWireSupported
      - name
      - routingNumber
      type: object
    Institution_Resource_Property:
      properties:
        type:
          default: institution
          example: institution
          type: string
          x-konfig-original-example: institution
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GetInstitutionByRoutingNumberResponse-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/Institution_Resource_Property_attributes'
      required:
      - attributes
      - type
      title: Institution Resource
      type: object
    Fee_Property_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        description:
          maxLength: 50
          type: string
        amount:
          minimum: 1
          type: integer
      required:
      - amount
      - description
      type: object
    Fee_Property:
      properties:
        type:
          default: fee
          example: fee
          type: string
          x-konfig-original-example: fee
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateFeeViaApiResponse-properties-data-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Fee_Property_attributes'
        relationships:
          $ref: '#/paths/~1fees/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/feeRelationships'
      title: Fee
      type: object
    Check_Deposit_Property_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        description:
          maxLength: 50
          minLength: 1
          type: string
        createdAt:
          format: date-time
          type: string
        settlementDate:
          format: date
          type: string
        amount:
          minimum: 1
          type: integer
        status:
          enum:
          - AwaitingImages
          - AwaitingFrontImage
          - AwaitingBackImage
          - Pending
          - PendingReview
          - AwaitingCustomerConfirmation
          - Rejected
          - Clearing
          - Sent
          - Canceled
          - Returned
          type: string
        reason:
          nullable: true
          type: string
        statusCreatedAt:
          format: date-time
          type: string
        statusSetBy:
          type: string
        statusHistory:
          items:
            $ref: '#/paths/~1check-deposits/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/statusEvent'
          type: array
        reasonText:
          type: string
        checkNumber:
          type: string
        vendor:
          type: string
        counterparty:
          $ref: '#/paths/~1check-deposits/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/counterparty'
      required:
      - amount
      - createdAt
      - description
      - status
      type: object
    Check_Deposit_Property:
      properties:
        type:
          enum:
          - checkDeposit
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Check_Deposit_Property_attributes'
        relationships:
          $ref: '#/paths/~1check-deposits/post/responses/201/content/application~1vnd.api%2Bjson/schema/properties/data/definitions/checkDepositRelationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Check Deposit
      type: object
    apiToken_Property_attributes:
      properties:
        description:
          type: string
        createdAt:
          format: date-time
          type: string
        expiration:
          format: date-time
          type: string
        token:
          type: string
        sourceIp:
          type: string
      required:
      - createdAt
      type: object
    apiToken_Property:
      properties:
        type:
          default: apiToken
          example: apiToken
          type: string
          x-konfig-original-example: apiToken
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateOrgApiTokenViaApiResponse-properties-data-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/apiToken_Property_attributes'
      title: apiToken
      type: object
    CustomerToken_Property_attributes:
      properties:
        token:
          type: string
        expiresIn:
          type: integer
      type: object
    CustomerToken_Property:
      properties:
        type:
          default: customerToken
          example: customerToken
          type: string
          x-konfig-original-example: customerToken
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCustomerTokenViaApiResponse-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/CustomerToken_Property_attributes'
      required:
      - attributes
      - type
      title: CustomerToken
      type: object
    CustomerTokenVerification_Property_attributes:
      properties:
        verificationToken:
          type: string
      type: object
    CustomerTokenVerification_Property:
      properties:
        type:
          default: customerTokenVerification
          example: customerTokenVerification
          type: string
          x-konfig-original-example: customerTokenVerification
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateCustomerTokenVerificationViaApiResponse-properties-data-properties-type
        attributes:
          $ref: '#/components/schemas/CustomerTokenVerification_Property_attributes'
      required:
      - attributes
      - id
      - type
      title: CustomerTokenVerification
      type: object
    Webhook_Property_attributes:
      properties:
        createdAt:
          format: date-time
          type: string
        label:
          type: string
        url:
          type: string
        status:
          type: string
        contentType:
          enum:
          - Json
          - JsonAPI
          type: string
        deliveryMode:
          enum:
          - AtMostOnce
          - AtLeastOnce
          type: string
        token:
          type: string
        subscriptionType:
          type: string
      type: object
    Webhook_Property:
      properties:
        type:
          default: webhook
          example: webhook
          type: string
          x-konfig-original-example: webhook
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CreateWebhookViaApiResponse-properties-data-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Webhook_Property_attributes'
      required:
      - attributes
      - id
      - type
      title: Webhook
      type: object
    AtmLocation_attributes_coordinates:
      properties:
        longitude:
          type: number
        latitude:
          type: number
      required:
      - latitude
      - longitude
      type: object
    AtmLocation_attributes:
      properties:
        network:
          type: string
        locationName:
          type: string
        coordinates:
          $ref: '#/components/schemas/AtmLocation_attributes_coordinates'
        address:
          $ref: '#/paths/~1applications~1%7BapplicationId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/grantor/properties/address'
        distance:
          type: integer
        surchargeFree:
          type: boolean
        acceptDeposits:
          type: boolean
      type: object
    AtmLocation:
      properties:
        type:
          default: atmLocation
          example: atmLocation
          type: string
          x-konfig-original-example: atmLocation
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GetAtmLocationsListFromApiResponse-items-properties-type
        attributes:
          $ref: '#/components/schemas/AtmLocation_attributes'
      required:
      - attributes
      - type
      title: AtmLocation
      type: object
    Transaction_Resource_Property:
      discriminator:
        mapping:
          originatedAchTransaction: '#/definitions/OriginatedAchTransaction'
          receivedAchTransaction: '#/definitions/ReceivedAchTransaction'
          returnedAchTransaction: '#/definitions/ReturnedAchTransaction'
          returnedReceivedAchTransaction: '#/definitions/ReturnedReceivedAchTransaction'
          dishonoredAchTransaction: '#/definitions/DishonoredAchTransaction'
          purchaseTransaction: '#/definitions/PurchaseTransaction'
          bookTransaction: '#/definitions/BookTransaction'
          atmTransaction: '#/definitions/AtmTransaction'
          feeTransaction: '#/definitions/FeeTransaction'
          reversalTransaction: '#/definitions/ReversalTransaction'
          cardTransaction: '#/definitions/CardTransaction'
          releaseTransaction: '#/definitions/ReleaseTransaction'
          wireTransaction: '#/definitions/WireTransaction'
          interchangeTransaction: '#/definitions/InterchangeTransaction'
          interestShareTransaction: '#/definitions/InterestShareTransaction'
          interestTransaction: '#/definitions/InterestTransaction'
          adjustmentTransaction: '#/definitions/AdjustmentTransaction'
          disputeSettlementTransaction: '#/definitions/DisputeSettlementTransaction'
          disputeTransaction: '#/definitions/DisputeTransaction'
          checkDepositTransaction: '#/definitions/CheckDepositTransaction'
          returnedCheckDepositTransaction: '#/definitions/ReturnedCheckDepositTransaction'
          billPayTransaction: '#/definitions/BillPayTransaction'
          settlementTransaction: '#/definitions/SettlementTransaction'
          sponsoredInterestTransaction: '#/definitions/SponsoredInterestTransaction'
          paymentAdvanceTransaction: '#/definitions/PaymentAdvanceTransaction'
          repaidPaymentAdvanceTransaction: '#/definitions/RepaidPaymentAdvanceTransaction'
          chargebackTransaction: '#/definitions/ChargebackTransaction'
          rewardTransaction: '#/definitions/RewardTransaction'
          negativeBalanceCoverageTransaction: '#/definitions/NegativeBalanceCoverageTransaction'
          accountLowBalanceClosureTransaction: '#/definitions/AccountLowBalanceClosureTransaction'
          bankRepaymentTransaction: '#/definitions/BankRepaymentTransaction'
          cashDepositTransaction: '#/definitions/CashDepositTransaction'
          customerRepaymentTransaction: '#/definitions/CustomerRepaymentTransaction'
          customerRepaymentReturnedTransaction: '#/definitions/CustomerRepaymentReturnedTransaction'
          checkPaymentTransaction: '#/definitions/CheckPaymentTransaction'
          returnedCheckPaymentTransaction: '#/definitions/ReturnedCheckPaymentTransaction'
        propertyName: type
      properties:
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        type:
          type: string
      title: Transaction Resource
      type: object
    GetListTransactionsFromApiResponse_included_inner:
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
        relationships:
          type: object
      type: object
    Dispute_Document_attributes_statusHistory_inner:
      properties:
        type:
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    Dispute_Document_attributes:
      properties:
        description:
          maxLength: 1024
          type: string
        source:
          enum:
          - DebitCard
          - ACH
          type: string
        externalId:
          maxLength: 255
          type: string
        link:
          pattern: "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\\
            b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)"
          type: string
        amount:
          type: integer
        status:
          type: string
        statusHistory:
          items:
            $ref: '#/components/schemas/Dispute_Document_attributes_statusHistory_inner'
          type: array
        createdAt:
          format: date-time
          type: string
        decisionReason:
          type: string
      required:
      - amount
      - createdAt
      - description
      - externalId
      - source
      - status
      type: object
    Dispute_Document:
      properties:
        type:
          default: dispute
          example: dispute
          type: string
          x-konfig-original-example: dispute
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GetListDisputesFromApiResponse-items-properties-type
        id:
          pattern: "^[1-9]\\d*$"
          type: string
        attributes:
          $ref: '#/components/schemas/Dispute_Document_attributes'
        relationships:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/definitions/disputeRelationships'
      required:
      - id
      - relationships
      - type
      title: Dispute Document
      type: object
    Repayment_Resource:
      discriminator:
        mapping:
          achRepayment: '#/definitions/AchRepayment'
          bookRepayment: '#/definitions/BookRepayment'
        propertyName: type
      properties:
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        type:
          type: string
      title: Repayment Resource
      type: object
    Check_Payment_Resource_attributes_counterparty:
      properties:
        name:
          type: string
        address:
          $ref: '#/paths/~1applications~1%7BapplicationId%7D/patch/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/grantor/properties/address'
        counterpartyMoved:
          type: boolean
      type: object
    Check_Payment_Resource_attributes:
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        description:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        returnCutoffTime:
          format: date-time
          type: string
        status:
          enum:
          - MarkedForReturn
          - Returned
          - Processed
          - PendingReview
          type: string
        memo:
          type: string
        deliveryStatus:
          enum:
          - Mailed
          - InLocalArea
          - Delivered
          - Rerouted
          - ReturnedToSender
          type: string
        sendAt:
          format: date-time
          type: string
        counterparty:
          $ref: '#/components/schemas/Check_Payment_Resource_attributes_counterparty'
        trackedAt:
          format: date-time
          type: string
        postalCode:
          type: string
        expectedDelivery:
          format: date
          type: string
        originated:
          type: boolean
        expirationDate:
          format: date
          type: string
        rejectReason:
          type: string
        returnReason:
          $ref: '#/paths/~1check-payments~1%7BcheckPaymentId%7D~1return/post/requestBody/content/application~1vnd.api%2Bjson/schema/properties/data/properties/attributes/properties/reason'
        pendingReviewReasons:
          items:
            enum:
            - NameMissMatch
            - SoftLimit
            type: string
          type: array
        checkNumber:
          type: string
        onUsAuxiliary:
          type: string
        onUs:
          type: string
        counterpartyRoutingNumber:
          type: string
        additionalVerificationStatus:
          enum:
          - Required
          - NotRequired
          - Approved
          type: string
      required:
      - amount
      - createdAt
      - originated
      - status
      - updatedAt
      type: object
    Check_Payment_Resource_relationships_account_data:
      example:
        id: "{}"
        type: depositAccount
      properties:
        type:
          enum:
          - depositAccount
          - account
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
      required:
      - id
      - type
      type: object
    Check_Payment_Resource_relationships_account:
      example:
        data:
          id: "{}"
          type: depositAccount
      properties:
        data:
          $ref: '#/components/schemas/Check_Payment_Resource_relationships_account_data'
      required:
      - data
      type: object
    Check_Payment_Resource_relationships_customer_data:
      example:
        id: "{}"
        type: businessCustomer
      properties:
        type:
          enum:
          - businessCustomer
          - individualCustomer
          - customer
          type: string
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
      required:
      - id
      - type
      type: object
    Check_Payment_Resource_relationships_customer:
      example:
        data:
          id: "{}"
          type: businessCustomer
      properties:
        data:
          $ref: '#/components/schemas/Check_Payment_Resource_relationships_customer_data'
      required:
      - data
      type: object
    Check_Payment_Resource_relationships_transaction_data:
      properties:
        type:
          default: transaction
          example: transaction
          type: string
          x-konfig-original-example: transaction
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GetListCheckPaymentsFromApiResponse-properties-data-items-properties-relationships-properties-transaction-properties-data-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
      required:
      - id
      - type
      type: object
    Check_Payment_Resource_relationships_transaction:
      properties:
        data:
          $ref: '#/components/schemas/Check_Payment_Resource_relationships_transaction_data'
      required:
      - data
      type: object
    Check_Payment_Resource_relationships:
      properties:
        account:
          $ref: '#/components/schemas/Check_Payment_Resource_relationships_account'
        customer:
          $ref: '#/components/schemas/Check_Payment_Resource_relationships_customer'
        customers:
          $ref: '#/paths/~1accounts/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/CreateDepositAccount/properties/relationships/properties/customers'
        transaction:
          $ref: '#/components/schemas/Check_Payment_Resource_relationships_transaction'
      required:
      - account
      type: object
    Check_Payment_Resource:
      properties:
        type:
          default: checkPayment
          example: checkPayment
          type: string
          x-konfig-original-example: checkPayment
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GetListCheckPaymentsFromApiResponse-properties-data-items-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Check_Payment_Resource_attributes'
        relationships:
          $ref: '#/components/schemas/Check_Payment_Resource_relationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Check Payment Resource
      type: object
    Stop_Payment_Property_attributes:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        amount: 1
        checkNumber: checkNumber
        tags: "{}"
        updatedAt: 2000-01-23T04:56:07.000+00:00
        status: Active
      properties:
        tags:
          $ref: '#/paths/~1fees/post/requestBody/content/application~1vnd.api%2Bjson/schema/data/properties/attributes/properties/tags'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        amount:
          minimum: 1
          type: integer
        status:
          enum:
          - Active
          - Disabled
          type: string
        checkNumber:
          type: string
      required:
      - amount
      - checkNumber
      - createdAt
      - updatedAt
      type: object
    Stop_Payment_Property_relationships_checkPayments_data_inner:
      example:
        id: "{}"
        type: checkPayment
      properties:
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        type:
          default: checkPayment
          example: checkPayment
          type: string
          x-konfig-original-example: checkPayment
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StopPaymentCreateResponse-properties-data-properties-relationships-properties-checkPayments-properties-data-items-properties-type
      type: object
    Stop_Payment_Property_relationships_checkPayments:
      example:
        data:
        - id: "{}"
          type: checkPayment
        - id: "{}"
          type: checkPayment
      properties:
        data:
          items:
            $ref: '#/components/schemas/Stop_Payment_Property_relationships_checkPayments_data_inner'
          type: array
      required:
      - data
      type: object
    Stop_Payment_Property_relationships:
      example:
        checkPayments:
          data:
          - id: "{}"
            type: checkPayment
          - id: "{}"
            type: checkPayment
        customers: "{}"
        account:
          data:
            id: "{}"
            type: depositAccount
        customer:
          data:
            id: "{}"
            type: businessCustomer
      properties:
        account:
          $ref: '#/components/schemas/Check_Payment_Resource_relationships_account'
        customer:
          $ref: '#/components/schemas/Check_Payment_Resource_relationships_customer'
        customers:
          $ref: '#/paths/~1accounts/post/requestBody/content/application~1vnd.api%2Bjson/schema/definitions/CreateDepositAccount/properties/relationships/properties/customers'
        checkPayments:
          $ref: '#/components/schemas/Stop_Payment_Property_relationships_checkPayments'
      required:
      - account
      - customer
      type: object
    Stop_Payment_Property:
      example:
        relationships:
          checkPayments:
            data:
            - id: "{}"
              type: checkPayment
            - id: "{}"
              type: checkPayment
          customers: "{}"
          account:
            data:
              id: "{}"
              type: depositAccount
          customer:
            data:
              id: "{}"
              type: businessCustomer
        attributes:
          createdAt: 2000-01-23T04:56:07.000+00:00
          amount: 1
          checkNumber: checkNumber
          tags: "{}"
          updatedAt: 2000-01-23T04:56:07.000+00:00
          status: Active
        id: "{}"
        type: stopPayment
      properties:
        type:
          default: stopPayment
          example: stopPayment
          type: string
          x-konfig-original-example: stopPayment
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-StopPaymentCreateResponse-properties-data-properties-type
        id:
          $ref: '#/paths/~1disputes/get/responses/200/content/application~1vnd.api%2Bjson%3B%20charset%3Dutf-8/schema/items/properties/id'
        attributes:
          $ref: '#/components/schemas/Stop_Payment_Property_attributes'
        relationships:
          $ref: '#/components/schemas/Stop_Payment_Property_relationships'
      required:
      - attributes
      - id
      - relationships
      - type
      title: Stop Payment
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-konfig-globally-required-security: true

